%Paper: hep-th/9205046
%From: "Dieter L\"ust" <LUEST%CERNVM.BITNET@pucc.princeton.edu>
%Date: Fri, 15 May 92 14:35:37 SET
%Date (revised): Mon, 18 May 92 11:55:54 SET

%This file contains at the end one postscript file for the figures.
%It should be stripped off (It is labelled by "THE FIGURES START HERE")
\input harvmac
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%              wlmac; modification of harvmac(vers9/91)
%                     with some mix of PHYZZX
%              by W. Lerche     Vers.  23 jan 92
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\input harvmac
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  References must be defined (in any order)
%  before the text by
%
%  \rdf\LABEL{TEXT OF REFERENCE}
%   or
%  \def\LABEL{\rrr\LABEL{TEXT OF REFERENCE}}
%   (consistent with old macro package)
%
%  One can then reference \LABEL\  and need not
%  care about ordering, first references etc.
%
%  Use \refs{\LABEL1{--}\LABELk} to get [label1-labelk]
%  for labels that have been called previously. For labels
%  that have not been called previously,
%  put for these first \nrf{\LABELi...\LABELj}
%  (\nrf\LABEL adds the corresponding ref to the list, but
%  does not print the label). One can also put
%  \multref\LABEL1{\LABEL2..\LABEL(k-1)}\LABELk,
%  where LABEL1 and LABELk should not have been
%  called previously.
%  \doubref\LABEL1\LABEL2 outputs [label1,label2].
%
%  \note{text}  displays "text" as a margin note
%  (in draft mode).
%
%  equation numbering is modified:
%  \eqn, \eqnalign works like in PHYZZX, that is, use
%  $$  equation    \eqn\LABEL $$
%
%  footnotes, Titelpage work similar to PHYZZX
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   local parameters
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
\newif\ifdraft
\def\draft{\drafttrue\draftmode\overfullrule=5pt%
\baselineskip=15pt plus 2pt minus 1pt}
\noblackbox
%
\catcode`\@=11
\newif\iffrontpage
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% sizes, offsets etc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\ifx\answ\bigans
\def\titleft{\titsm}
\magnification=1200\baselineskip=15pt plus 2pt minus 1pt
%
%%%%% offsets for unreduced mode: %%%%
%\voffset=0.35truein\hoffset=0.250truein
\advance\hoffset by-0.075truein
\hsize=6.15truein\vsize=600.truept\hsbody=\hsize\hstitle=\hsize
\else\let\lr=L
\def\titleft{\titla}
\magnification=1000\baselineskip=14pt plus 2pt minus 1pt
%
%%%%% offsets for reduced mode: %%%%%%%
%\hoffset=-.5truein\voffset=-.1truein
\vsize=6.5truein
\hstitle=8truein\hsbody=4.75truein
\fullhsize=10truein\hsize=\hsbody
\fi
%
\parskip=4pt plus 10pt minus 4pt
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  fonts
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\font\titsm=cmr10 scaled\magstep2
\font\titla=cmr10 scaled\magstep3
\font\tenmss=cmss10
\font\absmss=cmss10 scaled\magstep1
\newfam\mssfam
%
\font\footrm=cmr8  \font\footrms=cmr5
\font\footrmss=cmr5   \font\footi=cmmi8
\font\footis=cmmi5   \font\footiss=cmmi5
\font\footsy=cmsy8   \font\footsys=cmsy5
\font\footsyss=cmsy5   \font\footbf=cmbx8
\font\footmss=cmss8
%
\def\footfont{\def\rm{\fam0\footrm}
\textfont0=\footrm \scriptfont0=\footrms
\scriptscriptfont0=\footrmss
\textfont1=\footi \scriptfont1=\footis
\scriptscriptfont1=\footiss
\textfont2=\footsy \scriptfont2=\footsys
\scriptscriptfont2=\footsyss
\textfont\itfam=\footi \def\it{\fam\itfam\footi}
\textfont\mssfam=\footmss \def\mss{\fam\mssfam\footmss}
\textfont\bffam=\footbf \def\bf{\fam\bffam\footbf} \rm}
%
\def\tenpoint{\def\rm{\fam0\tenrm}
\textfont0=\tenrm \scriptfont0=\sevenrm
\scriptscriptfont0=\fiverm
\textfont1=\teni  \scriptfont1=\seveni
\scriptscriptfont1=\fivei
\textfont2=\tensy \scriptfont2=\sevensy
\scriptscriptfont2=\fivesy
\textfont\itfam=\tenit \def\it{\fam\itfam\tenit}
\textfont\mssfam=\tenmss \def\mss{\fam\mssfam\tenmss}
\textfont\bffam=\tenbf \def\bf{\fam\bffam\tenbf} \rm}
%
\ifx\answ\bigans\def\abstractfont{\tenpoint}\else
\def\abstractfont{\def\rm{\fam0\absrm}
\textfont0=\absrm \scriptfont0=\absrms
\scriptscriptfont0=\absrmss
\textfont1=\absi \scriptfont1=\absis
\scriptscriptfont1=\absiss
\textfont2=\abssy \scriptfont2=\abssys
\scriptscriptfont2=\abssyss
\textfont\itfam=\bigit \def\it{\fam\itfam\bigit}
\textfont\mssfam=\absmss \def\mss{\fam\mssfam\absmss}
\textfont\bffam=\absbf \def\bf{\fam\bffam\absbf}\rm}\fi
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% footnotes   (adapted from PHYZZX)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\f@@t{\baselineskip10pt\lineskip0pt\lineskiplimit0pt
\bgroup\aftergroup\@foot\let\next}
\setbox\strutbox=\hbox{\vrule height 8.pt depth 3.5pt width\z@}
%
\def\vfootnote#1{\insert\footins\bgroup
\baselineskip10pt\footfont
\interlinepenalty=\interfootnotelinepenalty
\floatingpenalty=20000
\splittopskip=\ht\strutbox \boxmaxdepth=\dp\strutbox
\leftskip=24pt \rightskip=\z@skip
\parindent=12pt \parfillskip=0pt plus 1fil
\spaceskip=\z@skip \xspaceskip=\z@skip
\Textindent{$#1$}\footstrut\futurelet\next\fo@t}
%
\def\Textindent#1{\noindent\llap{#1\enspace}\ignorespaces}
\def\footnote#1{\attach{#1}\vfootnote{#1}}%
\def\footattach{\attach\footsymbol}
\def\foot{\attach\footsymbolgen\vfootnote{\footsymbol}}
\let\footsymbol=\star
%
\newcount\lastf@@t           \lastf@@t=-1
\newcount\footsymbolcount    \footsymbolcount=0
%
\def\footsymbolgen{\relax\footsym
\global\lastf@@t=\pageno\footsymbol}
\def\footsym{\ifnum\footsymbolcount<0
\global\footsymbolcount=0\fi
{\iffrontpage \else \advance\lastf@@t by 1 \fi
\ifnum\lastf@@t<\pageno \global\footsymbolcount=0
\else \global\advance\footsymbolcount by 1 \fi }
\ifcase\footsymbolcount \fd@f\star\or
\fd@f\dagger\or \fd@f\ast\or
\fd@f\ddagger\or \fd@f\natural\or
\fd@f\diamond\or \fd@f\bullet\or
\fd@f\nabla\else \fd@f\dagger
\global\footsymbolcount=0 \fi }
\def\fd@f#1{\xdef\footsymbol{#1}}
%
\def\space@ver#1{\let\@sf=\empty \ifmmode #1\else \ifhmode
\edef\@sf{\spacefactor=\the\spacefactor}
\unskip${}#1$\relax\fi\fi}
\def\attach#1{\space@ver{\strut^{\mkern 2mu #1} }\@sf\ }
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% References
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newif\ifnref
\def\rrr#1#2{\relax\ifnref\nref#1{#2}\else\ref#1{#2}\fi}
\def\rdf#1#2{\begingroup\obeylines
\gdef#1{\rrr{#1}{#2}}\endgroup\unskip}
\def\nrf#1{\nreftrue{#1}\nreffalse}
\def\doubref#1#2{\refs{{#1},{#2}}}
\def\multref#1#2#3{\nrf{#1#2#3}\refs{#1{--}#3}}
\nreffalse
%
\def\refout{\listrefs}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%% eq numbering
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\eqn#1{\xdef #1{(\secsym\the\meqno)}
\writedef{#1\leftbracket#1}%
\global\advance\meqno by1\eqno#1\eqlabeL#1}
%
\def\eqnalign#1{\xdef #1{(\secsym\the\meqno)}
\writedef{#1\leftbracket#1}%
\global\advance\meqno by1#1\eqlabeL{#1}}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%  macros for titlepage, marginnotes, etc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\chap#1{\newsec{#1}}
\def\chapter#1{\chap{#1}}
\def\sect#1{\subsec{#1}}
\def\section#1{\sect{#1}}
%
\def\\{\ifnum\lastpenalty=-10000\relax
\else\hfil\penalty-10000\fi\ignorespaces}
%
\def\note#1{\leavevmode%
\edef\@@marginsf{\spacefactor=\the\spacefactor\relax}%
\ifdraft\strut\vadjust{%
\hbox to0pt{\hskip\hsize\hskip.05in%
\vbox to0pt{\vskip-\dp\strutbox%
\sevenrm\baselineskip=10pt plus 1pt minus 1pt%
\ifx\answ\bigans\hsize=.9in\else\hsize=.4in\fi%
\tolerance=5000 \hbadness=5000%
\leftskip=0pt \rightskip=0pt \everypar={}%
\raggedright\parskip=0pt \parindent=0pt%
\vskip-\ht\strutbox\noindent\strut#1\par%
\vss}\hss}}\fi\@@marginsf\kern-.01cm}
%
\def\titlepage{%
\frontpagetrue\nopagenumbers\abstractfont%
\hsize=\hstitle\rightline{\vbox{\baselineskip=10pt%
{\abstractfont\pubnum}}}\pageno=0}
\frontpagefalse
%
\def\pubnum{}
\def\pdate{\number\month/\number\yearltd}
%
\def\makefootline{\iffrontpage\vskip .27truein
\line{\the\footline}
\vskip -.1truein\line{\pdate\hfil}
%\else\vskip.5cm\line{\hss \tenrm $-$ \folio\ $-$ \hss}
\fi}
%
\def\title#1{\vskip .7truecm\titlestyle{\titleft #1}}
%
\def\titlestyle#1{\par\begingroup \interlinepenalty=9999
\leftskip=0.02\hsize plus 0.23\hsize minus 0.02\hsize
\rightskip=\leftskip \parfillskip=0pt
\hyphenpenalty=9000 \exhyphenpenalty=9000
\tolerance=9999 \pretolerance=9000
\spaceskip=0.333em \xspaceskip=0.5em
\noindent #1\par\endgroup }
%
\def\autskip{\ifx\answ\bigans\vskip.5truecm\else\vskip.1cm\fi}
\def\author#1{\vskip .7in \centerline{#1}}
\def\andauthor#1{\autskip
\centerline{\it and} \autskip\centerline{#1}}
\def\address#1{\ifx\answ\bigans\vskip.2truecm
\else\vskip.1cm\fi{\it \centerline{#1}}}
%
\def\abstract#1{\vskip .5in\vfil\centerline
{\bf Abstract}\penalty1000
{{\smallskip\ifx\answ\bigans\leftskip 2pc \rightskip 2pc
\else\leftskip 5pc \rightskip 5pc\fi
\noindent\abstractfont \baselineskip=12pt
{#1} \smallskip}}
\penalty-1000}
%
\def\endpage{\tenpoint\supereject\global\hsize=\hsbody%
\frontpagefalse\footline={\hss\tenrm\folio\hss}}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\CERN{\address{CERN, Geneva, Switzerland}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\inbar{\vrule height1.5ex width.4pt depth0pt}
\def\IC{\relax\,\hbox{$\inbar\kern-.3em{\mss C}$}}
\def\IF{\relax{\rm I\kern-.18em F}}
\def\IH{\relax{\rm I\kern-.18em H}}
\def\II{\relax{\rm I\kern-.17em I}}
\def\IN{\relax{\rm I\kern-.18em N}}
\def\IP{\relax{\rm I\kern-.18em P}}
\def\IQ{\relax\,\hbox{$\inbar\kern-.3em{\rm Q}$}}
\def\IR{\relax{\rm I\kern-.18em R}}
\def\ZZ{\relax{\hbox{\mss Z\kern-.42em Z}}}
%
\def\a{\alpha} \def\b{\beta}
\def\e{\epsilon} \def\g{\gamma}
\def\G{\Gamma} \def\l{\lambda}
\def\L{\Lambda} \def\s{\sigma}
\def\cA{{\cal A}} \def\cB{{\cal B}}
\def\cC{{\cal C}} \def\cD{{\cal D}}
\def\cF{{\cal F}} \def\cG{{\cal G}}
\def\cH{{\cal H}} \def\cI{{\cal I}}
\def\cJ{{\cal J}} \def\cK{{\cal K}}
\def\cL{{\cal L}} \def\cM{{\cal M}}
\def\cN{{\cal N}} \def\cO{{\cal O}}
\def\cP{{\cal P}} \def\cQ{{\cal Q}}
\def\cR{{\cal R}} \def\cV{{\cal V}}
%
\def\nup#1({Nucl.\ Phys.\ $\us {B#1}$\ (}
\def\plt#1({Phys.\ Lett.\ $\us  {B#1}$\ (}
\def\plb#1({Phys.\ Lett.\ $\us  {#1B}$\ (}
\def\cmp#1({Comm.\ Math.\ Phys.\ $\us  {#1}$\ (}
\def\prp#1({Phys.\ Rep.\ $\us  {#1}$\ (}
\def\prl#1({Phys.\ Rev.\ Lett.\ $\us  {#1}$\ (}
\def\prv#1({Phys.\ Rev. $\us  {#1}$\ (}
\def\und#1({            $\us  {#1}$\ (}
\def\tit#1,{{\it #1},\ }
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% misc macros %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\crr{\crcr\noalign{\vskip {8.3333pt}}}
\def\tilde{\widetilde}
\def\bar{\overline}
%\def\us#1{\underline{#1}}
\def\us#1{\bf{#1}}
\def\hat{\widehat}
\def\Hyph{\vrule height 2.3pt width 2.5pt depth -1.5pt}
%
\def\Coeff#1#2{{#1\over #2}}
\def\Coe#1.#2.{{#1\over #2}}
\def\coeff#1#2{\relax{\textstyle {#1 \over #2}}\displaystyle}
\def\coe#1.#2.{\relax{\textstyle {#1 \over #2}}\displaystyle}
\def\half{{1 \over 2}}
\def\shalf{\relax{\textstyle {1 \over 2}}\displaystyle}
%
\def\dag#1{#1\!\!\!/\,\,\,}
\def\to{\rightarrow}
\def\notin{\hbox{{$\in$}\kern-.51em\hbox{/}}}
\def\shdot{\!\cdot\!}
\def\ket#1{\,\big|\,#1\,\big>\,}
\def\bra#1{\,\big<\,#1\,\big|\,}
\def\equaltop#1{\mathrel{\mathop=^{#1}}}
\def\Trbel#1{\mathop{{\rm Tr}}_{#1}}
\def\inserteq#1{\noalign{\vskip-.2truecm\hbox{#1\hfil}
\vskip-.2cm}}
\def\attac#1{\Bigl\vert
{\phantom{X}\atop{{\rm\scriptstyle #1}}\phantom{X}}}
\def\exx#1{e^{{\displaystyle #1}}}
\def\del{\partial}
\def\delbar{\bar\partial}
\def\nex#1{$N\!=\!#1$}
\def\dex#1{$d\!=\!#1$}
\def\eg{{\it e.g.}} \def\ie{{\it i.e.}}
\catcode`\@=12
%%%%%%%%%%%%%%%%%%%%%%%%%% end wlmac %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% +--------------------------------------------------------------------+
% |                                                                    |
% |                           TABLES.TEX                               |
% |                                                                    |
% |                     Ray F. Cowan  15-Feb-85                        |
% |                                                                    |
% |                       Princeton University                         |
% |                                                                    |
% |                     Last Revision: 17-Apr-86                       |
% |                                                                    |
% |   Macros I find handy for making tables.  See TABLEDOC TEX for     |
% |   a longer description.  The token-counting macros are straight    |
% |   from the TeXbook's "Dirty Tricks" appendix.                      |
% |                                                                    |
% +--------------------------------------------------------------------+
%
\newbox\hdbox%
\newcount\hdrows%
\newcount\multispancount%
\newcount\ncase%
\newcount\ncols% This is the number of primary text columns in the table.
\newcount\nrows%
\newcount\nspan%
\newcount\ntemp%
\newdimen\hdsize%
\newdimen\newhdsize%
\newdimen\parasize%
\newdimen\spreadwidth%
\newdimen\thicksize%
\newdimen\thinsize%
\newdimen\tablewidth%
\newif\ifcentertables%
\newif\ifendsize%
\newif\iffirstrow%
\newif\iftableinfo%
\newtoks\dbt%
\newtoks\hdtks%
\newtoks\savetks%
\newtoks\tableLETtokens%
\newtoks\tabletokens%
\newtoks\widthspec%
%
%  Book-keeping stuff--see how often these macros are called.
%
%\immediate\write15{%
%CP SMSG GJMSINK TEXTABLE --> TABLE MACROS V. 851121 JOB = \jobname%
%}%
%
%  Turn on table diagnostics.
%
\tableinfotrue%
\catcode`\@=11%  Allows use of "@" in macro names, like PLAIN.TEX does.
\def\out#1{\immediate\write16{#1}}%  Debugging aid.  Writes #1 on the
%                                    user's terminal and in the log file.
%
%  Define the \tstrut height, depth in terms of the x_height parameter.
%
\def\tstrut{\vrule height3.1ex depth1.2ex width0pt}%
\def\and{\char`\&}%  Allows us to get an `&' in the text.  This is the
%                    same as using the PLAIN TeX macro \&.
\def\tablerule{\noalign{\hrule height\thinsize depth0pt}}%
\thicksize=1.5pt%  Default thickness for fat rules.  The user should feel
%                  free to change this to his preference.
\thinsize=0.6pt%   Default thickness for thin rules.
\def\thickrule{\noalign{\hrule height\thicksize depth0pt}}%
\def\hrulefill{\leaders\hrule\hfill}%
\def\bigrulefill{\leaders\hrule height\thicksize depth0pt \hfill}%
\def\ctr#1{\hfil\ #1\hfil}%
\def\altctr#1{\hfil #1\hfil}%
\def\vctr#1{\hfil\vbox to0pt{\vss\hbox{#1}\vss}\hfil}%
%
%  Here are things for controlling the width of the finished table.
%
\tablewidth=-\maxdimen%
\spreadwidth=-\maxdimen%
\def\tabskipglue{0pt plus 1fil minus 1fil}%
%
%  Stuff for centering or not.
%
\centertablestrue%
\def\centeredtables{%
   \centertablestrue%
}%
\def\noncenteredtables{%
   \centertablesfalse%
}%
%
%  \vctr vertically centers its argument in the row.
%
\parasize=4in%
\long\def\para#1{%  Used to make little paragraphs out of one entry.
   {%
      \vtop{%
         \hsize=\parasize%
         \baselineskip14pt%
         \lineskip1pt%
         \lineskiplimit1pt%
         \noindent #1%
         \vrule width0pt depth6pt%
      }%
   }%
}%
%
\gdef\ARGS{########}%  Produces the correct number of #'s in the preamble
%                      by the time eveything is expanded and \halign sees
%                      it.
\gdef\headerARGS{####}%  Same as \ARGS, but used in \header macros.
\def\@mpersand{&}%  Allows us to get alignment tab characters later
%                   when we have made the character "&" an active macro.
{\catcode`\|=13%  Make |'s locally active.
\gdef\letbarzero{\let|0}%  Globally define a macro that allows us to
%                          keep active |'s from being expanded in edef's.
\gdef\letbartab{\def|{&&}}%
\gdef\letvbbar{\let\vb|}%
%  This \def will cause active |'s read by
%                            \ruledtable to be converted into double
%                            alignment tabs.
}%  End of locally active |'s.
%
{\catcode`\&=4%  Make these alignment tabs.
\def\ampskip{&\omit\hfil&}%  This local macro skips a vertical rule.
\catcode`\&=13%  Now make &'s into active macros.
\let&0%  This allows us to expand \ampskip in the next \xdef without
%        attempting to expand the & and getting an "undefined control
%        sequence" error.
\xdef\letampskip{\def&{\ampskip}}%
\gdef\letnovbamp{\let\novb&\let\tab&}
%  This will cause active &'s read by
%                                   \ruledtable to be converted into
%                                   double tabs and an \omit'ted \vrule.
}%  End of locally active &'s.
%
\def\begintable{%  Here we make |'s and &'s active characters so we can
%                  interpret them as macros.  Note that this action is
%                  true only until we encounter the matching \endgroup
%                  token later at the end of the \ruledtable macro.
   \begingroup%
   \catcode`\|=13\letbartab\letvbbar%
   \catcode`\&=13\letampskip\letnovbamp%
   \def\multispan##1{%  We must redefine \multispan to count the number
%                       of primary columns, not physical columns.
      \omit \mscount##1%
      \multiply\mscount\tw@\advance\mscount\m@ne%
      \loop\ifnum\mscount>\@ne \sp@n\repeat%
   }%  End of \multispan macro.
   \def\|{%
      &\omit\widevline&%
   }%
   \ruledtable%  Now we call \ruledtable to do the real work.
}%  End of \begintable macro.
%
\long\def\ruledtable#1\endtable{%
%
%  This macro reads in the user's data entries
%  and converts them into a ruled table.
%
%  Important note:  Many macros and parameters are re-defined here, and
%  these must be kept local to the table macros to avoid conflict with
%  their use outside of tables.  This is done by the \begingroup token
%  macro \begintable and the \endgroup token at the end of
%  this macro.
%
   \offinterlineskip%  Needed to make rules touch each other.
   \tabskip 0pt%  Needed for same reason as \offinterlineskip.
   \def\widevline{\vrule width\thicksize}%  Make outer \vrule's wider.
   \def\endrow{\@mpersand\omit\hfil\crnorm\@mpersand}%
   \def\crthick{\@mpersand\crnorm\thickrule\@mpersand}%
   \def\crthickneg##1{\@mpersand\crnorm\thickrule
          \noalign{{\skip0=##1\vskip-\skip0}}\@mpersand}%
   \def\crnorule{\@mpersand\crnorm\@mpersand}%
   \def\crnoruleneg##1{\@mpersand\crnorm
          \noalign{{\skip0=##1\vskip-\skip0}}\@mpersand}%
   \let\nr=\crnorule%  A shorter abbreviation.
   \def\endtable{\@mpersand\crnorm\thickrule}%
%
   \let\crnorm=\cr%  Allows us to use \cr for our own purposes.
%
%  Cause user-typed \cr's to follow a row with a \tablerule.
%
   \edef\cr{\@mpersand\crnorm\tablerule\@mpersand}%
   \def\crneg##1{\@mpersand\crnorm\tablerule
          \noalign{{\skip0=##1\vskip-\skip0}}\@mpersand}%
   \let\ctneg=\crthickneg
   \let\nrneg=\crnoruleneg
%
   \the\tableLETtokens%  Get the user's extra \let's, if any.
%
%  Put the data entries into a token register so we can scan through them
%  and see what the user is asking us to do.
%
   \tabletokens={&#1}%  We add an extra alignment tab to the beginning
%                       of the first row to allow for the first \vrule.
%
%  Now count how many rows are in the table and return the result in
%  count register \nrows; do the same for columns, and return that
%  in register \ncols.
%
   \countROWS\tabletokens\into\nrows%
   \countCOLS\tabletokens\into\ncols%
%
%  Now do a little arithmetic to convert the number of primary columns
%  into the number of physical columns that the alignment preamble must
%  prepare for;  similarly for rows.
%
   \advance\ncols by -1%
   \divide\ncols by 2%
   \advance\nrows by 1%
%
%  Tell the user how many rows and columns we found in his data, if he
%  wants to know.
%
   \iftableinfo %
      \immediate\write16{[Nrows=\the\nrows, Ncols=\the\ncols]}%
   \fi%
%
%  Now we actually go ahead and produce the table.
%
   \ifcentertables
      \ifhmode \par\fi%  Make sure we are in vertical mode.
%     \line{% The final table comes out as an \hbox of width the \hsiz
%                    * * Replaced  at 14:32:17 on 3 Mar 1987 by JOWETT
%      since \line is usurped by LaTeX ...
      \hbox to \hsize{% The final table comes out as an \hbox of width the
% \hsiz
      \hss%  The final table will be centered left-to-right.
   \else %
      \hbox{%
   \fi
      \vbox{%
         \makePREAMBLE{\the\ncols}%  Generate the preamble.
         \edef\next{\preamble}%  This line and the next line force the
         \let\preamble=\next%    expansion of all \ARGS tokens into the
%                                appropriate number of #'s.
         \makeTABLE{\preamble}{\tabletokens}%  Go do the \halign here.
      }%  End of \vbox.
      \ifcentertables \hss}\else }\fi%  Finish the centering effect.
%                                       It is important that no spaces
%                                       follow the two `}' here.
%  }%  End of \line.
   \endgroup%  Return all local macros and parameters to their outside
%              values.
   \tablewidth=-\maxdimen%  Reset \tablewidth to normal.
   \spreadwidth=-\maxdimen% Same for \spreadwidth.
}%  End of macro \ruledtable.
%
\def\makeTABLE#1#2{%  Does an \halign for the \ruledtable macro.
   {%  Start of local parameter values.
%
   \let\ifmath0%     These macros would cause trouble if they were to be
   \let\header0%     expanded in the following \xdef; we \let them be
   \let\multispan0%  equal to a digit, because digits can't be expanded.
%
%  Set up the width specification here.
%
   \ncase=0%
   \ifdim\tablewidth>-\maxdimen \ncase=1\fi%
   \ifdim\spreadwidth>-\maxdimen \ncase=2\fi%
   \relax%  This \relax is absolutely necessary, without it the following
%           \ifcase will always take \ncase=0.
%
   \ifcase\ncase %
      \widthspec={}%
   \or %
      \widthspec=\expandafter{\expandafter t\expandafter o%
                 \the\tablewidth}%
   \else %
      \widthspec=\expandafter{\expandafter s\expandafter p\expandafter r%
                 \expandafter e\expandafter a\expandafter d%
                 \the\spreadwidth}%
   \fi %
%\out{Widthspec=[\the\widthspec]}%
%\out{Preamble=[\preamble]}%
   \xdef\next{%  We must force the preamble to be expanded BEFORE the
      \halign\the\widthspec{%
%        \halign is done;  this \edef\next{...}\next construction
%                does the trick.
      #1%  This is the preamble text.
%
      \noalign{\hrule height\thicksize depth0pt}%  Makes the top \hrule.
%
      \the#2\endtable%  This is the main body.
%
%     \noalign{\hrule height0.7pt depth0pt}%  Makes the last \hrule.
      }%  End of \halign.
   }%  End of \next.
   }%  End of local values.
   \next%  This \next must be outside of the local values, because now
%          we want those troublesome macros in the \let's above to have
%          their normal actions.
}%  End of macro \makeTABLE.
%
\def\makePREAMBLE#1{%  This macro generates the necessary preamble for a
%                      ruled table with #1 primary columns.
%                      (Primary columns means the number of columns NOT
%                       counting those used for vertical rules.)
   \ncols=#1%  Get the number of columns desired.
   \begingroup%  Start local parameter definitions.
   \let\ARGS=0%  This is the key to the whole thing; it prevents \ARGS
%                from being expanded in the following \edef's.
   \edef\xtp{\widevline\ARGS\tabskip\tabskipglue%
   &\ctr{\ARGS}\tstrut}%  A 1-column preamble.  Gets the sizing right.
   \advance\ncols by -1%  One column has been generated; decrement the
%                         counter.
   \loop%  Append as many further columns as needed to the preamble.
      \ifnum\ncols>0 %
      \advance\ncols by -1%
      \edef\xtp{\xtp&\vrule width\thinsize\ARGS&\ctr{\ARGS}}%
   \repeat
   \xdef\preamble{\xtp&\widevline\ARGS\tabskip0pt%
   \crnorm}%  Adds the last \vrule.
   \endgroup%  End of local parameters.
}%  End of macro \makePREAMBLE.
%
\def\countROWS#1\into#2{%  This counts the number of rows in #1 by
%                          looking for control sequences that end a row,
%                          e.g., \cr, \crthick, etc., and puts the result
%                          into count register #2.
   \let\countREGISTER=#2%
   \countREGISTER=0%
%  \out{In countROWS:  tokens are [\the#1]}%
   \expandafter\ROWcount\the#1\endcount%
}%
%
\def\ROWcount{%
   \afterassignment\subROWcount\let\next= %
}%
\def\subROWcount{%
%  \out{In subROWcount:  next is [\meaning\next]}%  Debugging aid.
   \ifx\next\endcount %
      \let\next=\relax%
   \else%
      \ncase=0%
      \ifx\next\cr %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\endrow %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crthick %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crnorule %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crthickneg %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crnoruleneg %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crneg %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\header %
%     \out{In subROWcount:  next=header, ncase set=1}%
         \ncase=1%
      \fi%
%     \out{In subROWcount:  ncase is [\the\ncase]}%
      \relax%
      \ifcase\ncase %
         \let\next\ROWcount%
%        \out{subROWcount---> ncase=\the\ncase}%
      \or %
         \let\next\argROWskip%
%        \out{subROWcount---> ncase=\the\ncase}%
      \else %
      \fi%
   \fi%
%  \out{subROWcount---> NEXT=\meaning\next}%
   \next%
}%  End of macro \subROWcount.
%
\def\counthdROWS#1\into#2{%
\dvr{10}%
   \let\countREGISTER=#2%
   \countREGISTER=0%
\dvr{11}%
%  \out{In counthdROWS:  tokens are [\the#1]}%
\dvr{13}%
   \expandafter\hdROWcount\the#1\endcount%
\dvr{12}%
}%
%
\def\hdROWcount{%
   \afterassignment\subhdROWcount\let\next= %
}%
\def\subhdROWcount{%
%\out{In subhdROWcount:  next is [\meaning\next]}%
   \ifx\next\endcount %
      \let\next=\relax%
   \else%
      \ncase=0%
      \ifx\next\cr %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\endrow %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crthick %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\crnorule %
         \global\advance\countREGISTER by 1%
         \ncase=0%
      \fi%
      \ifx\next\header %
%\out{In subhdROWcount:  next=header, ncase set=1}%
         \ncase=1%
      \fi%
%\out{In subhdROWcount:  ncase is [\the\ncase]}%
\relax%
      \ifcase\ncase %
         \let\next\hdROWcount%
%\out{subhdROWcount---> ncase=\the\ncase}%
      \or%
         \let\next\arghdROWskip%
%\out{subhdROWcount---> ncase=\the\ncase}%
      \else %
      \fi%
   \fi%
%\out{subhdROWcount---> NEXT=\meaning\next}%
   \next%
}%
%
{\catcode`\|=13\letbartab
\gdef\countCOLS#1\into#2{%
%  \out{In countCOLS:  tokens are [\the#1]}
   \let\countREGISTER=#2%
   \global\countREGISTER=0%
   \global\multispancount=0%
   \global\firstrowtrue
   \expandafter\COLcount\the#1\endcount%
   \global\advance\countREGISTER by 3%
   \global\advance\countREGISTER by -\multispancount
%  \out{countCOLS-->[\the\countREGISTER]}
}%
%
\gdef\COLcount{%
   \afterassignment\subCOLcount\let\next= %
}%
{\catcode`\&=13%
\gdef\subCOLcount{%
%\out{In subCOLcount: next is [\meaning\next]}
   \ifx\next\endcount %
      \let\next=\relax%
   \else%
      \ncase=0%
      \iffirstrow
         \ifx\next& %
            \global\advance\countREGISTER by 2%
            \ncase=0%
         \fi%
         \ifx\next\span %
            \global\advance\countREGISTER by 1%
            \ncase=0%
         \fi%
         \ifx\next| %
            \global\advance\countREGISTER by 2%
            \ncase=0%
         \fi
         \ifx\next\|
            \global\advance\countREGISTER by 2%
            \ncase=0%
         \fi
         \ifx\next\multispan
            \ncase=1%
            \global\advance\multispancount by 1%
         \fi
         \ifx\next\header
            \ncase=2%
         \fi
         \ifx\next\cr       \global\firstrowfalse \fi
         \ifx\next\endrow   \global\firstrowfalse \fi
         \ifx\next\crthick  \global\firstrowfalse \fi
         \ifx\next\crnorule \global\firstrowfalse \fi
         \ifx\next\crnoruleneg \global\firstrowfalse \fi
         \ifx\next\crthickneg  \global\firstrowfalse \fi
         \ifx\next\crneg       \global\firstrowfalse \fi
      \fi%  End of \iffirstrow.
\relax%\out{subCOL-->  ncase=[\the\ncase]}
% \out{subCOL-->  next=\meaning\next}
      \ifcase\ncase %
         \let\next\COLcount%
      \or %
         \let\next\spancount%
      \or %
         \let\next\argCOLskip%
      \else %
      \fi %
   \fi%
%  \out{subCOL-->  countREGISTER=[\the\countREGISTER]}
   \next%
}%
\gdef\argROWskip#1{%
%  Deletes the next balanced, undelimited argument from a
%                 token list.
% \out{---> Entering argROWskip <---}
% \out{In argROWskip:  deleted arg is [#1]}%
   \let\next\ROWcount \next%
}%  End of macro \argskip.
\gdef\arghdROWskip#1{%
%  Deletes the next balanced, undelimited argument from a
%                 token list.
% \out{---> Entering arghdROWskip <---}
% \out{In arghdROWskip:  deleted arg is [#1]}%
   \let\next\ROWcount \next%
}%  End of macro \arghdROWskip.
\gdef\argCOLskip#1{%
%  Deletes the next balanced, undelimited argument from a
%                 token list.
% \out{---> Entering argCOLskip <---}
% \out{In argCOLskip:  deleted arg is [#1]}%
   \let\next\COLcount \next%
}%  End of macro \argskip.
}%  End of active &'s.
}%  End of active |'s.
\def\spancount#1{%\out{spancount--->\meaning#1}
   \nspan=#1\multiply\nspan by 2\advance\nspan by -1%
   \global\advance \countREGISTER by \nspan
%  \out{number spancount--->\the\nspan; \the\countREGISTER}
   \let\next\COLcount \next}%
%
%\def\dvr#1{\vrule width 1.0pt depth 0pt height 12pt$_{#1}$}
\def\dvr#1{\relax}%
% \omit\hfil%
% \parindent=0pt\hsize=1.1in\valign{%
% \vfil#\vfil&\vfil#\vfil\cr\hfil\hbox{\ Added to\ }\hfil&%
% \hfil\hbox{\ empty events\ }\hfil\cr}\hfil%
\def\header#1{%
\dvr{1}{\let\cr=\@mpersand%
\hdtks={#1}%
%\out{In header:  hdtks=[\the\hdtks]}%
\counthdROWS\hdtks\into\hdrows%
\advance\hdrows by 1%
\ifnum\hdrows=0 \hdrows=1 \fi%
%\out{In header:  Nhdrows=[\the\hdrows]}%
\dvr{5}\makehdPREAMBLE{\the\hdrows}%
%\out{In header:  headerpreamble=[\headerpreamble]}%
\dvr{6}\getHDdimen{#1}%
%\out{In header:  hdsize=[\the\hdsize]}%
%\striplastCR{#1}%
{\parindent=0pt\hsize=\hdsize{\let\ifmath0%
\xdef\next{\valign{\headerpreamble #1\crnorm}}}\dvr{7}\next\dvr{8}%
}%
}\dvr{2}}%  End of macro \header.
%\def\striplastCR#1\cr{\xdef\headerbody{#1}}%
\def\makehdPREAMBLE#1{%This macro generates the necessary preamble for a
\dvr{3}%
%                      ruled table with \ncols primary columns.
%                      (Primary columns means the number of columns NOT
%                       counting those used for vertical rules.
\hdrows=#1%  Get the number of columns desired.
{%  Start local parameter definitions.
\let\headerARGS=0%
%  This is the key to the whole thing; it prevents \ARGS
\let\cr=\crnorm%
%                from being expanded in the followin \edef's.
\edef\xtp{\vfil\hfil\hbox{\headerARGS}\hfil\vfil}%
\advance\hdrows by -1%  One row has been generated; decrement the
%                         counter.
\loop%  Append as many further rows as needed to the preamble.
\ifnum\hdrows>0%
\advance\hdrows by -1%
\edef\xtp{\xtp&\vfil\hfil\hbox{\headerARGS}\hfil\vfil}%
\repeat%
\xdef\headerpreamble{\xtp\crcr}%
}%  End of local parameters.
\dvr{4}}%  End of \makehdPREAMBLE.
%
\def\getHDdimen#1{%
%\out{In getHDdimen:  Arg 1=[#1]}%
\hdsize=0pt%
\getsize#1\cr\end\cr%
}%  End of macro getHDdimen.
\def\getsize#1\cr{%
%\out{In getsize:  Arg 1=[#1]}%
%  Here we have to check arg#1 and see if the first token in #1 is an
%    \end; if so, we stop, else we check the width of arg#1.
%  We recall that each arg#1 will be terminated with a \cr token.
\endsizefalse\savetks={#1}%
%\out{In getsize:  the savetks = [\the\savetks]}%
\expandafter\lookend\the\savetks\cr%
%\out{In getsize:  ifendsize = [\meaning\ifendsize]}%
\relax \ifendsize \let\next\relax \else%
\setbox\hdbox=\hbox{#1}\newhdsize=1.0\wd\hdbox%
\ifdim\newhdsize>\hdsize \hdsize=\newhdsize \fi%
%\out{In getsize:  hdsize=[\the\hdsize]}%
%\out{In getsize:  newhdsize=[\the\newhdsize]}%
\let\next\getsize \fi%
\next%
}%
\def\lookend{\afterassignment\sublookend\let\looknext= }%
\def\sublookend{\relax%
%\out{In sublookend:  looknext = [\looknext]}%
\ifx\looknext\cr %
%\out{In sublooknext:  looknext=cr}%
\let\looknext\relax \else %
%\out{In sublooknext:  looknext/=cr}%
   \relax
   \ifx\looknext\end \global\endsizetrue \fi%
   \let\looknext=\lookend%
    \fi \looknext%
}%
%
%  Allow the user to make his own names for crthick, etc.
%
\def\tablelet#1{%
   \tableLETtokens=\expandafter{\the\tableLETtokens #1}%
}%
\catcode`\@=12%  Change @'s back to their normal category code.
%
%\input wlmac
%\input TABLES
%\draft

%
\def\OFFSET{\hoffset=6.pt\voffset=40.pt}
\def\SIZE{\hsize=420.pt\vsize=620.pt}
\OFFSET

\def\WIT{\rrr\WIT{E. Witten, \prv44 (1991) 314.}}

\def\WZW{\rrr\WZW{E. Witten, Comm. Math. Phys. {\bf 92} (1984) 455;
E. Witten, \nup223 (1983) 422;
K. Bardacki, E. Rabinovici and B. Saering, \nup301 (1988) 151;
D. Karabali and H.J. Schnitzer, \nup 329 (1990) 649.}}

\def\DLP{\rrr\DLP{L. Dixon, J. Lykken and M. Peskin, \nup325 (1989)
325;
I. Bars, \nup334 (1990) 125; I. Bars and D. Nemeschansky, \nup348
(1991) 89.}}

\def\BUSCH{\rrr\BUSCH{T. Buscher, \plt194 (1987) 59, \plt201 (1988)
466;
L.E. Ib\'a\~nez, D. L\"ust, F. Quevedo and
S. Theisen, unpublished notes (1990);
E. Smith and J. Polchinski, \plt 263 (1991) 59;
G. Veneziano, \plt265 (1991) 287;
A.A. Tseytlin, Mod. Phys. Lett. {\bf A6} (1991) 1721.}}

\def\KIR{\rrr\KIR{E.B. Kiritsis, Mod. Phys. Lett. {\bf A6} (1991) 2871.}}

\def\GIV{\rrr\GIV{A. Giveon, Mod. Phys. Lett. {\bf A6} (1991) 2843.}}

\def\RAB{\rrr\RAB{S. Elitzur, A. Forge and E. Rabinovici, \nup359
(1991) 581; G. Mandal, A.M. Sengupta and S.R. Wadia,
Mod. Phys. Lett. {\bf A6} (1991) 1685.}}

\def\DIVER{\rrr\DIVER{R. Dijgkraaf, E. Verlinde and H. Verlinde,
\nup371 (1992) 269.}}

\def\CFMP{\rrr\CFMP{C. Callan, D. Friedan, E. Martinec and M. Perry,
\nup262 (1985) 593.}}

\def\MUL{\rrr\MUL{M. Muller, \nup337 (1990) 37.}}

\def\HOR{\rrr\HOR{P. Horava, \plt278 (1992) 101.}}

\def\ANT{\rrr\ANT{I. Antoniadis, C. Bachas, J. Ellis and D.V. Nanopoulos,
\plt211 (1988) 393, \nup328 (1989) 117.}}

\def\MYE{\rrr\MYE{R.C. Myers, \plt199 (1987) 371; A.A. Tseytlin and
C. Vafa, \nup372 (1992) 443; A.A. Tseytlin, preprint
DAMTP-91-37; A.A. Tseytlin, preprint DAMPT-92-15;
K. Behrndt, preprint DESY 92-055.}}

\def\GIQU{\rrr\GIQU{
J.H. Horne and G. Horowitz, \nup368 (1992) 444;
I. Bars and Sfetsos, \plt277 (1992) 269;
D. Gershon, preprint TAUP-1937-91 (1991);
J. Ellis, N.E. Mavromatos and D.V. Nanopoulos, \plt278 (1992) 246;
P. Ginsparg and F. Quevedo, preprint LA-UR-92-640
(1992).}}

\def\HWANG{\rrr\HWANG{S. Hwang, \nup354 (1991) 100; H. Hennigson,
S. Hwang and P. Roberts, \plt267 (1991) 350.}}

\def\HAEL{\rrr\HAEL{
S.W. Hawking and G.F.R. Ellis, {\it ``The Large Scale Structure of
Space-Time'',} Cambridge University Press, Cambridge, 1973.}}

\def \ANFEKOU{\rrr\ANFEKOU{I. Antoniadis, S. Ferrara and C. Kounnas,
preprint LPTENS 91-30; I. Antoniadis and C. Kounnas, preprint
LPTENS 91-31.}}


%
\def\ss{\scriptscriptstyle}

%pubtype={}

\def\pubnum{
\hbox{CERN-TH.6494/92}\hbox{LPTENS 92-16}}

\def\pdate{May 1992}

\titlepage
\title
{Cosmological String Backgrounds from Gauged WZW Models}
\vskip-.8cm
\author{{\bf Costas Kounnas}}
\vskip.2cm
\centerline{\it Ecole Normale Sup\'erieure, Paris, France}
\andauthor{{\bf Dieter L\"ust}\foot{Heisenberg Fellow}}
\CERN
\vskip-2.8 cm
\abstract{We discuss the four-dimensional target-space interpretation of
bosonic strings based on gauged WZW models, in particular of those
based on the non-compact coset space $SL(2,{\bf R})\times SO(1,1)^2
/SO(1,1)$.
We show that these theories lead,
apart from the recently
broadly discussed black-hole type of backgrounds,
to cosmological string
backgrounds, such as an expanding Universe.
Which of the two cases is realized depends on the sign of the level
of the corresponding Kac-Moody algebra.
We discuss various aspects of these new cosmological
string backgrounds.}

\vskip2.5cm
%\noindent CERN-TH.6494/92
\endpage
%pagenumber=1
%\sequentialequations
%
%\def\footline{\hfil}
\nopagenumbers
\null\vfill\eject
\advance\pageno -1


\def\makefootline{
\vskip.5cm\line{\hss \tenrm $-$ \folio\ $-$ \hss}}
%\footline={\hss\tenrm\folio\hss}


The investigation of strings in curved space-time backgrounds might
provide us with some important insight into questions about
quantum gravity. Recently, a very intriguing relation between
black-hole type of backgrounds \RAB\ in two dimensions and
gauged Wess-Zumino-Witten (WZW) models \WZW\ based on the
non-compact coset space $SL(2,{\bf R})/SO(1,1)$
was discovered \WIT. Subsequently, this discussion was put
forward to higher dimensions \GIQU. All these examples show
a singularity in forward times (black-holes, black branes, etc.).
In this note we shall argue
that the same non-compact cosets, which give rise to
black-holes,
also lead to cosmological string backgrounds, namely
to an expanding Universe. (Cosmological string backgrounds were
discussed before in \MYE,\ANT,\MUL.)
In this case, the black-hole singularity becomes a singular
surface hidden behind the light-cone, which can never be met in
future times when one travels inside the light-cone.
Even our cosmological string solution is derived from an exact
conformal field theory in the semi-classical approximation,
we think that it also serves to be
an interesting solution in its own right
to Einstein's
equations coupled to a non-constant dilaton matter field.

The gauged WZW model based on the coset $G/H$ is described by the
action
$$\eqalign{S=&{k\over 4\pi}\int {\rm d}^2z{\rm tr}(g^{-1}\partial \
g^{-1}\bar\partial g)-{k\over 12\pi}\int_B{\rm tr}(g^{-1}dg\wedge g^{-1}
dg\wedge g^{-1}dg)\cr
&+{k\over2\pi}\int{\rm d}^2{\rm tr}(A\bar\partial gg^{-1}-\bar Ag^{-1}
\partial g-g^{-1}Ag\bar A),\cr}\eqn\wzwaction
$$
where the boundary of $B$ is the 2D worldsheet,
$g$ is a group element of the group $G$, and $A$ are the gauge fields
of $H$ transforming as $A\rightarrow h_L^{-1}(A+\partial )h_L$; $k$ is
the level of the Kac--Moody algebra for the group $G$. To be specific,
we want to discuss a four-dimensional target-space
based on the non-compact coset $SL(2,{\bf R})\times SO(1,1)^2/SO(1,1)$.
The central charge of this coset CFT (non-compact coset CFT's were
discussed in \DLP)
is given by
$$c=4+{6\over k-2},\eqn\central
$$
where the $k$, being a real number, is the level of the non-compact
$SL(2,{\bf R})$ Kac--Moody algebra.
For the case that the string theory
is entirely given by this coset CFT, the condition $c=26$ implies
$k=25/11$. However, we
want to study the semiclassical limit $k\rightarrow\pm
\infty$. Therefore we prefer to couple the $SL(2,{\bf R})\times SO(1,1)^2/
SO(1,1)$ coset CFT to an internal CFT with central charge
$$c_{\rm int}=
22-\delta c,\qquad
\delta c={6\over k-2}.\eqn\centralch
$$
Now we parametrize the
group element of $SL(2,{\bf R})$ as
$g=\pmatrix{u&a\cr -b&v\cr}$ with $uv+ab=1$.
Finally we assume for simplicity that $H=SO(1,1)$
is entirely inside $SL(2,{\bf R})$. Performing a vector-like
gauging, $a=\pm b$, the action \wzwaction\ can be identified with
a $\sigma$-model action of the form
$$S=\int{\rm d}^2zG_{MN}^\sigma
\partial X^M\bar\partial X^N.\eqn\sigmaaction
$$
In the semiclassical approximation $k\rightarrow\pm\infty$,
the corresponding four-dimensional $\sigma$-model metric is given as
$${\rm d}s^2_\sigma=-k{{\rm d}u{\rm d}v \over 1-uv}+{\rm d}x_2^2
+{\rm d}x_3^2.\eqn\sigmametric
$$
We recognize that the signature of the two-dimensional part of
this metric depends just on the sign of the level $k$ of the
$SL(2,{\bf R})$ Kac--Moody algebra. In fact, for $k\rightarrow +\infty$
($\delta c>0$)
space-time possesses a singularity in futures times $\tau=u+v$.
In this
case, $u$ and $v$  are Kruskal-like coordinates of a black-hole metric;
more precisely the metric \sigmametric\ has the causal structure
of a four-dimensional black-brane (see figure 1).
The singularity at $uv=1$ originates from the fixed points
of the modded vector gauge symmetry $H$ at this curve.
However for $k\rightarrow -\infty$ ($\delta c<0$)
the causal structure is completely different. Specifically the
causal structure for negative $k$ is obtained from the black-hole case
by a $90^0$ rotation of the two-dimensional $u,v$-plane (see figure 2).
Now one has  a forward light-cone with the
singularity behind it.
(Of course, the
two  cases $k\rightarrow\pm\infty$ are not analytic continuations
of each other.) As we will discuss in the following, this new class
of string backgrounds with negative $k$
describes an expanding Universe with singularity
outside the visible horizon.

The four-dimensional effective string action  for
the gravitational  and dilaton $\Phi$
background fields has the following form:
$$S_{\rm eff}=\int{\rm d}^4x\sqrt{G^\sigma}e^\Phi(R^\sigma -(D\Phi)^2
+\Lambda),\qquad \Lambda={2\delta c\over 3}.\eqn\effeaction
$$
Here $R^\sigma$ is the curvature scalar derived from the metric
$G_{MN}^\sigma$ in the
$\sigma$-model frame. It is not
difficult to show that the $\sigma$-model metric eq.\sigmametric\
together with the dilaton field
$$\Phi=\log(1-uv)\eqn\dilaton
$$
satisfy the equations of motion \CFMP
$$\eqalign{&R_{MN}^\sigma+D_MD_N\Phi=0,\cr
&R^\sigma+(D_M\Phi)^2+2D_MD^M\Phi=\Lambda,\cr}\eqn\sigmaeq
$$
for both signs of $k$.
(In fact, one has to replace $k$ by $k-2=6/\delta c$ in eq.\sigmametric,
which is allowed in the large $k$ limit.)

To get contact with standard gravity theory, which possesses
a canonical Einstein term, one has to perform a Weyl rescaling
of the $\sigma$-model metric eq.\sigmametric\ by the exponential
of the dilaton field.\foot{There is no Weyl rescaling of the metric
in two space-time dimensions.}
This Weyl rescaling however does not change the
causal structure of the theory.
Specifically, the metric in the Einstein
frame is given as
$${\rm d}s^2=e^\Phi{\rm d}s^2_\sigma={\rm d}u{\rm d}v
+(1-uv)({\rm d}x_2^2+{\rm d}x_3^2).\eqn\einsteinmetric
$$
Here we have focused on the
cosmological case with $k\rightarrow -\infty$,
where we have absorbed the level $k$ in the metric. The effective
action now has the form
$$S_{\rm eff}=\int{\rm d}^4x\sqrt G\biggl({1\over 2}R-{1\over 4}D_M\Phi
D^M\Phi-V(\Phi)\biggr) ,\qquad V(\Phi)=2e^{-\Phi}.\eqn\einsteinaction
$$

The metric eq.\einsteinmetric\ in the Kruskal-type of coordinates
$u$ and $v$ leads to a space-time singularity at $uv=1$.
This can been seen by computing the corresponding Ricci tensor:
$$R_{uv}={uv-2\over 2(1-uv)^2}.\eqn\ricci
$$
Second, there is the horizon at $uv=0$. Thus we see
that,
introducing the proper time $\tau=u-v$, there is  no singularity
for future times $\tau$ inside the light-cone $uv<0$
(region I in figure
2). The singularity is hidden behind the horizon. However signals in
regions II, III
may hit the singularity, and the singularity may also send signals
through regions II, III into region I.

Now we want to show that inside the singularity free
region I we have in fact an expanding Universe with metric similar to the
Robertson-Walker metric. For this purpose it is useful to
introduce coordinates which cover exactly the region I,
namely\foot{Alternatively, one can change the coordinates in the
following way: $u=e^{x_1}\sqrt{t-1}$, $v=-e^{-x_1}\sqrt{t-1}$ in region I
and $u=\pm e^{x_1}\sqrt{1-t}$, $v=\pm e^{-x_1}\sqrt{1-t}$ in regions II,
III.
Then the metric takes the form ${\rm d}s^2=-{1\over 4(t-1)}{\rm d}t^2
+(t-1){\rm d}x_1^2+t({\rm d}x_2^2+{\rm d}x_3^2)$. In region I this
metric again  leads to an expanding Universe, isotropic for large $t$.}
$$u=e^{x_1}t,\qquad v=-e^{-x_1}t.\eqn\change
$$
(The coordinates $t$ and $x_1$ are of course not geodesically complete;
the singularity occurs for imaginary times $t$, $t^2<-1$.)
It follows that curves of constant times $t$ correspond in figure 2 to
hyperbolae $uv=-t^2$, whereas the curves of constant $x_1$ are given
by the straight lines $u/v=-e^{2x_1}$ (see figure 2).
In these coordinates
the metric now looks like
$${\rm d}s^2=-{\rm d}t^2+t^2{\rm d}x_1^2
+(1+t^2)({\rm d}x_2^2+{\rm d}x_3^2),\eqn\newmetric
$$
and the dilaton has the form
$$\Phi(t)=\log(1+t^2).\eqn\newdil
$$
Clearly, the metric \newmetric\ describes an expanding Universe in region
I with two different scale factors $R_1(t)=t$, $R_{2,3}(t)=\sqrt{1+t^2}$,
where $t$ is the cosmological time coordinate.
For small $t$, the Universe expands unisotropically. However, for
large times, one approaches an isotropic, linear expansion of the
Friedmann-Robertson-Walker type with $R_i(t)=t$ ($i=1,2,3$).
Thus we see that for large $t$ this background, derived from the coset
CFT $SL(2,{\bf R})\times SO(1,1)^2/SO(1,1)$, asymptotically
approaches the linearly expanding Universe considered in ref.\ANT,
which is based on a free scalar CFT plus a dilaton of the form
$\Phi=2\log t$.
However our solution has no initial singularity at $t=0$ in contrast to
the standard isotropic Robertson-Walker Universe.
(The Ricci tensor in the coordinates \change\ takes
the form $R_{tt}={2\over (1+t^2)^2}$, $R^i_j=-{2\over 1+t^2}\delta^i_j$.)

Let us briefly derive the energy momentum tensor of the dilaton matter
field.
Specifically consider the
classical Einstein equations
$$R_{MN}-{1\over 2}G_{MN}R=-T_{MN}.\eqn\einsteinequ
$$
The corresponding
energy-momentum tensor from the dilaton matter field has
the form
$$T_{MN}={1\over 2}D_M\Phi D_N\Phi-G_{MN}\biggl({1\over 4}G^{PQ}D_P\Phi
D_Q\Phi+V(\Phi)\biggr) .\eqn\energymom
$$
Then we obtain, with $\Phi=\log(1+t^2)$ and $V(\Phi)={2\over 1+t^2}$,
that
$$\eqalign{
T_{tt}&={(\partial_t\Phi)^2\over 4}+V=\rho={3t^2+2\over (1+t^2)^2},\cr
T_{ij}&=\biggl({(\partial_t\Phi)^2\over 4}-V\biggr)G_{ij}
=pG_{ij}=-{t^2+2\over (1+t^2)^2}G_{ij}.\cr}\eqn\densitypres
$$
Here $\rho$ is the energy density of the dilaton matter system
and $p$ is its pressure. Now it is easy to see that the quantity
$$\rho+3p=-{4\over (1+t^2)^2}\eqn\rhopi
$$
is negative for all $t$.
It is interesting to observe that the form of $\rho+3p$, being always
negative, violates
an assumption by Hawking and Ellis \HAEL\
on the form
of the matter energy-momentum tensor, which, being satisfied,
would always lead to a singular space-time.
Thus, the absence of an initial
singularity in the cosmological region I can
be understood from this point of view.

It is also interesting to discuss the target space
duality properties of this
cosmological string background. In the gauged WZW model, the
duality operation corresponds to the exchange of
gauging the axial $SO(1,1)$ subgroup of $SL(2,{\bf R})$
instead of gauging the vector-like subgroup $SO(1,1)$ \KIR.
Seen from the target space point of view it is the exchange of the regions
I and IV in figures 1 and 2, whereas the regions II and III
are mapped onto
themselves \GIV,\DIVER. In fact, one can show explicitly \BUSCH\
how the metric \sigmametric\ is transformed under the
duality transformation to a new metric, which also satisfies the field
equations \sigmaeq\
after a suitable redefinition of the dilaton field. For this purpose
it is convenient
to introduce another set of coordinates like
$$u=e^{x_1}{\rm sinh}x_0,\qquad v=-e^{-x_1}{\rm sinh}x_0.\eqn\coordtwo
$$
Then the cosmological string background of region I
in the sigma-model frame has
the form\foot{This metric is exactly of the form of the cosmological
backgrounds discussed in \MUL.}
$${\rm d}s^2_\sigma=-{\rm d}x_0^2+{\rm tanh}^2x_0{\rm d}x_1^2
+{\rm d}x_2^2+{\rm d}x_3^2.\eqn\metrictwo
$$
The duality transformation now acts as
$$R_1(x_0)={\rm tanh}x_0\rightarrow {1\over R_1(x_0)}={\rm coth}x_0.
\eqn\duality
$$
Therefore the dual metric just describes region IV with a singularity
at $x_0=0$. The field equations \sigmaeq\ are invariant under
this duality transformation, provided that the dilaton transforms
as
$$\Phi(x_0)=2\log{\rm cosh}x_0\rightarrow \Phi(x_0)+2\log R_1(X_0)
=2\log{\rm sinh}x_0.\eqn\diltrans
$$
Finally, in the coordinates eq.\change, the duality transformation
is expressed as
$$t^2\rightarrow -1-t^2.\eqn\dualt
$$
Thus we see again that the cosmological region I is mapped to
the cosmological region IV, which requires an analytic continuation
to imaginary $t$ values.

Let us discuss briefly some alternative models. For example consider
the gauged WZW model based on the
coset ${SL(2,{\bf R})\over SO(1,1)}
\times {SU(2)\over U(1)}$.\foot{This model is relevant for
curved backgrounds with target-space supersymmetries as discussed
in ref.\ANFEKOU.}
The central
charge of this CFT is given by
$$c={3k_1\over k_1-2}+{3k_2\over k_2+2}-2.\eqn\centralcal
$$
The corresponding
background in the Einstein frame has the following form:
$${\rm d}s^2=-k_1(1+z\bar z )
{\rm d}u{\rm d}v+k_2(1-uv){\rm d}z{\rm d}\bar z.\eqn\sutwo
$$
Here $z$ is a complex parameter of an $SU(2)$ group element,
$z=x_2+ix_3$.
For the black-hole case with positive $k_1$ (the $SU(2)$ Kac--Moody
level $k_2$ should always be a positive integer) one can set
$k_1=k_2+4$. Then one obtains that $c=4$ regardless of the value of
$k_1$.
Thus $\delta c=0$ for all $k_1$
and one could expect that the four-dimensional background
of the semiclassical approximation is valid for all $k_1$.
In addition, since $c_{\rm int}=22$ for all $k_1$, the internal
CFT could be simply given by (compactified) free bosons.

For the cosmological case with negative $k_1$ we cannot set $k_1=k_2+4$.
As an alternative one could couple $SL(2,{\bf R})/SO(1,1)$
with negative $k_1$ to an Euclidean two-dimensional
`black-hole' based on the coset $SL(2,{\bf R})/U(1)$ with positive
Kac--Moody level $k_2$. (A twisted version of
the product of an Euclidean and Minkowskian
black-hole coset CFT was already considered in ref.\HOR.)
The central charge of this model is
$$c={3k_1\over k_1-2}+{3k_2\over k_2-2}-2.\eqn\centralcala
$$
Again one
obtains $\delta c=0$ for $k_1=-k_2+4$. It would be interesting
to study further alternatives to this model.

In summary we have shown that gauged WZW-models  have a completely
different target space interpretation
when one changes the sign of the level of the underlying
non-compact Kac--Moody algebra. For both signs, black-holes as well as
cosmological backgrounds, the metric of the target space leads to
space-time singularities. In the cosmological case the singularity is
hidden behind
the light-cone. However the singularity
could send signals into the light-cone and therefore influence
the expansion of the Universe. This is very similar to the initial
singularity (Big Bang) in the standard Friedmann-Robertson--Walker
Universe.
It is important to stress that, seen from the CFT
point of view, the singularities in the black-hole
as well as in the cosmological
frameworks have exactly the same origin, namely in the existence
of fixed points of the modded (vector) `gauge' symmetry $H$. Therefore
one could expect that the same type of quantum gravity effects
are relevant near the black-hole as well as in the early Universe
at times shortly
after the initial singularity.
These quantum gravity effects should in principle be determined from the
underlying coset CFT. (For considerations in this directions
for the black-hole case, see ref.\DIVER.)
Finally we want to mention that the gauged WZW model based on the
non-compact coset $SL(2,{\bf R})/SO(1,1)$ possesses, for both signs
of $k$\foot{For negative $k$, this coset CFT shows many parallels
to the CFT based on the compact space $SU(2)/U(1)$.}, still
many  problems which are presently not completely
understood. In particular the elimination of the negative-norm
states is unclear.
This question should be addressed together
with the spectrum of the additional part of the CFT. Moreover,
the construction of a modular invariant partition function
is still problematic (for a discussion on this issue see \HWANG).

\bigskip
\bigskip

We like to thank P. Candelas, E. Kiritsis, W. Lerche, N. Mavromatos,
M. Porrati and F. Quevedo
for useful discussions.

\refout
\endpage

\centerline{\bf Figure Captions}
\vskip1cm

\noindent{\bf Figure 1:}
The causal structure of the two-dimensional slice of the black-hole
metric equation \sigmametric\ with positive Kac--Moody level $k$.

\noindent{\bf Figure 2:}
The causal structure of the two-dimensional slice of the cosmological
metric equation \sigmametric\ with negative Kac--Moody level $k$.


\vfill\eject\bye
%THE FIGURES START HERE
%!PS-Adobe-2.0 EPSF-2.0
%%Title: dieter.create
%%Creator: Create
%%CreationDate: Tue May 14 11:33:44 1992
%%For: lerche
%%DocumentFonts: (atend)
%%Pages: 0 1
%%BoundingBox: 103 47 521 782
%%EndComments

%%BeginDocument: /usr/lib/NextStep/printPackage.ps
%!PS-Adobe-2.0
%%Title: Printing Package
%%EndComments
%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs
grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip
newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6
eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put
__NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch
concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath
cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1
roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat
0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0
[129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior
201/twosuperior
204/threesuperior
209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute
228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis
242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def

/_NXfstr 128 string dup 0 (_NX) putinterval def

/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known

  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels
getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub
8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll
rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes
exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
%%EndDocument

gsave
-1 -9 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto
closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1
roll 1 exch div scale translate
} def /fillandframeoval2 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix
stroke
} def /fillandframerectangle2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /setup {
    setgray setlinewidth setlinecap setlinejoin gsave
} def /setIt {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /setup2 {
    setIt
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3
rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0
exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate
x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0
setlinejoin stroke grestore fill grestore
} def /bezierarrow {
    gsave /y4 exch def /x4 exch def /y3 exch def /x3 exch def /y2
exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch
def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 x2 y2 x3 y3
curveto x4 y4 lineto x3 y3 neg lineto x2 y2 neg x1 y1 neg 0 0 curveto
closepath gsave 0 setlinejoin stroke grestore fill x0 neg y0 neg
translate neg rotate grestore
} def /unfilledbezierarrow {
    gsave /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1
exch def /x1 exch def newpath translate dup rotate x3 y3 moveto x2 y2
x1 y1 0 0 curveto x1 y1 neg x2 y2 neg x3 y3 neg curveto gsave 0
setlinejoin stroke grestore grestore
} def /unfilledarrow {
    gsave /y1 exch def /x1 exch def newpath translate dup rotate x1
y1 moveto 0 0 lineto x1 y1 neg lineto gsave 0 setlinejoin stroke
grestore grestore
} def /framedRoundBox {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub
def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0
rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0
rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /filledRoundBox {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub
def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0
rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0
rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /roundBoxPath {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub
def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto
0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0
rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0 rad neg rad neg rad
neg rcurveto closepath
} def /filledandframedRoundBox {
    5 copy filledRoundBox 6 -1 roll setgray framedRoundBox
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch
translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch
translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rboxfilledframed {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch
translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rovalfillstroke {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def
%%EndSetup
gsave
103 47 418 735 rectclip
103 47 418 735 rectclip
gsave
107.000000 369.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 412 412 rectclip
205.737518 0 translate 45 rotate
0.706206 0.706206 scale
1.460993 1.460993 scale

/__NXEPSSave save def /showpage {} def 0 setgray 0 setlinecap 1
setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count
/__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument:

%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 282
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Sometime Sometime
%%EndComments
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale

%%Creator: Mathematica
%%AspectRatio: 1

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.095238 0.5 0.1 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.48 moveto
0.06349 0.47818 lineto
0.10317 0.476 lineto
0.14286 0.47333 lineto
0.18254 0.47 lineto
0.22222 0.46571 lineto
0.2619 0.46 lineto
0.28175 0.45636 lineto
0.30159 0.452 lineto
0.32143 0.44667 lineto
0.34127 0.44 lineto
0.36111 0.43143 lineto
0.38095 0.42 lineto
0.40079 0.404 lineto
0.41071 0.39333 lineto
0.42063 0.38 lineto
0.43056 0.36286 lineto
0.44048 0.34 lineto
0.4504 0.308 lineto
0.45536 0.28667 lineto
0.46032 0.26 lineto
0.46528 0.22571 lineto
0.47024 0.18 lineto
0.4752 0.116 lineto
0.47768 0.07333 lineto
0.48016 0.02 lineto
stroke
0.48088 0 moveto
0.48016 0.02 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.49876 0 moveto
0.49876 1 lineto
stroke
stroke
0.49876 1 moveto
0.49876 0 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.51912 1 moveto
0.51984 0.98 lineto
stroke
0.51984 0.98 moveto
0.52232 0.92667 lineto
0.5248 0.884 lineto
0.52976 0.82 lineto
0.53472 0.77429 lineto
0.53968 0.74 lineto
0.54464 0.71333 lineto
0.5496 0.692 lineto
0.55952 0.66 lineto
0.56944 0.63714 lineto
0.57937 0.62 lineto
0.58929 0.60667 lineto
0.59921 0.596 lineto
0.61905 0.58 lineto
0.63889 0.56857 lineto
0.65873 0.56 lineto
0.67857 0.55333 lineto
0.69841 0.548 lineto
0.7381 0.54 lineto
0.77778 0.53429 lineto
0.81746 0.53 lineto
0.85714 0.52667 lineto
0.89683 0.524 lineto
0.93651 0.52182 lineto
0.97619 0.52 lineto
stroke
grestore
grestore
grestore
gsave
0.004 setlinewidth
0.02381 0.5 moveto
0.97619 0.5 lineto
stroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount
sub {end} repeat __NXEPSSave restore
grestore
grestore
gsave
104.000000 49.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 412 412 rectclip
0 205.737518 translate 315 rotate
0.706206 0.706206 scale
1.460993 1.460993 scale

/__NXEPSSave save def /showpage {} def 0 setgray 0 setlinecap 1
setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count
/__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument:

%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 282
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Sometime Sometime
%%EndComments
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale

%%Creator: Mathematica
%%AspectRatio: 1

MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.095238 0.5 0.1 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.48 moveto
0.06349 0.47818 lineto
0.10317 0.476 lineto
0.14286 0.47333 lineto
0.18254 0.47 lineto
0.22222 0.46571 lineto
0.2619 0.46 lineto
0.28175 0.45636 lineto
0.30159 0.452 lineto
0.32143 0.44667 lineto
0.34127 0.44 lineto
0.36111 0.43143 lineto
0.38095 0.42 lineto
0.40079 0.404 lineto
0.41071 0.39333 lineto
0.42063 0.38 lineto
0.43056 0.36286 lineto
0.44048 0.34 lineto
0.4504 0.308 lineto
0.45536 0.28667 lineto
0.46032 0.26 lineto
0.46528 0.22571 lineto
0.47024 0.18 lineto
0.4752 0.116 lineto
0.47768 0.07333 lineto
0.48016 0.02 lineto
stroke
0.48088 0 moveto
0.48016 0.02 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.49876 0 moveto
0.49876 1 lineto
stroke
stroke
0.49876 1 moveto
0.49876 0 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.51912 1 moveto
0.51984 0.98 lineto
stroke
0.51984 0.98 moveto
0.52232 0.92667 lineto
0.5248 0.884 lineto
0.52976 0.82 lineto
0.53472 0.77429 lineto
0.53968 0.74 lineto
0.54464 0.71333 lineto
0.5496 0.692 lineto
0.55952 0.66 lineto
0.56944 0.63714 lineto
0.57937 0.62 lineto
0.58929 0.60667 lineto
0.59921 0.596 lineto
0.61905 0.58 lineto
0.63889 0.56857 lineto
0.65873 0.56 lineto
0.67857 0.55333 lineto
0.69841 0.548 lineto
0.7381 0.54 lineto
0.77778 0.53429 lineto
0.81746 0.53 lineto
0.85714 0.52667 lineto
0.89683 0.524 lineto
0.93651 0.52182 lineto
0.97619 0.52 lineto
stroke
grestore
grestore
grestore
gsave
0.004 setlinewidth
0.02381 0.5 moveto
0.97619 0.5 lineto
stroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount
sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0.15 1 10 setIt
194 683 translate
[1 0 0 -1 0 10] concat
gsave
/Times-Roman findfont 16 scalefont [1 0 0 -1 0 0] makefont
173
exch
defineuserobject
173 execuserobject setfont
5 5 translate
-4 3 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(u) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
417 358 translate
[1 0 0 -1 0 10] concat
gsave
173 execuserobject setfont
5 5 translate
-4 3 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(u) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
411 682 translate
[1 0 0 -1 0 10] concat
gsave
173 execuserobject setfont
5 5 translate
-4 3 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(v) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
414 146 translate
[1 0 0 -1 0 10] concat
gsave
173 execuserobject setfont
5 5 translate
-4 3 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(v) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
295 622 translate
[1 0 0 -1 0 14] concat
gsave
173 execuserobject setfont
18 7 translate
-17 5 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(uv=1) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
298 515 translate
[1 0 0 -1 0 14] concat
gsave
173 execuserobject setfont
18 7 translate
-17 5 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(uv=1) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
366 278 translate
[1 0 0 -1 0 14] concat
gsave
173 execuserobject setfont
18 7 translate
-17 5 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(uv=1) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
219 275 translate
[1 0 0 -1 0 14] concat
gsave
173 execuserobject setfont
18 7 translate
-17 5 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(uv=1) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
259 574 translate
[1 0 0 -1 0 14] concat
gsave
/Times-Roman findfont 18 scalefont [1 0 0 -1 0 0] makefont
220
exch
defineuserobject
220 execuserobject setfont
4 7 translate
-3 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(I) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
303 291 translate
[1 0 0 -1 0 14] concat
gsave
220 execuserobject setfont
4 7 translate
-3 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(I) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
303 594 translate
[1 0 0 -1 0 14] concat
gsave
220 execuserobject setfont
7 7 translate
-6 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(II) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
325 249 translate
[1 0 0 -1 0 14] concat
gsave
220 execuserobject setfont
7 7 translate
-6 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(II) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
302 544 translate
[1 0 0 -1 0 14] concat
gsave
220 execuserobject setfont
10 7 translate
-9 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(III) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
274 248 translate
[1 0 0 -1 0 14] concat
gsave
220 execuserobject setfont
10 7 translate
-9 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(III) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
299 646 translate
[1 0 0 -1 0 15] concat
gsave
220 execuserobject setfont
10.5 7.5 translate
-9.5 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(IV) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
362 249 translate
[1 0 0 -1 0 15] concat
gsave
220 execuserobject setfont
10.5 7.5 translate
-9.5 6 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(IV) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
292 434 translate
[1 0 0 -1 0 15] concat
gsave
/Times-Roman findfont 14 scalefont [1 0 0 -1 0 0] makefont
249
exch
defineuserobject
249 execuserobject setfont
17.5 7.5 translate
-16.5 3 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(Fig. 1) show
0 0 translate
grestore
grestore
0 0 0.15 1 10 setIt
292 118 translate
[1 0 0 -1 0 15] concat
gsave
249 execuserobject setfont
17.5 7.5 translate
-16.5 3 translate
newpath
0 0 moveto
0 setgray
0 0 moveto
(Fig. 2) show
0 0 translate
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-Roman

