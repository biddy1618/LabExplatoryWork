%Paper: 9203042
%From: Andy Strominger <andy@denali.physics.ucsb.edu>
%Date: Tue, 17 Mar 92 18:21:13 PST
%Date (revised): Fri, 20 Mar 92 15:33:26 PST


%
%Revised version differs in note added,  and very minor corrections
%
%
%There are six postscript figures appended -- search for string %fig
%
\input harvmac
\noblackbox
\def\Title#1#2{\rightline{#1}\ifx\answ\bigans\nopagenumbers\pageno0\vskip1in
\else\pageno1\vskip.8in\fi \centerline{\titlefont #2}\vskip .5in}
\font\titlerm=cmr10 scaled\magstep3 \font\titlerms=cmr7 scaled\magstep3
\font\titlermss=cmr5 scaled\magstep3 \font\titlei=cmmi10 scaled\magstep3
\font\titleis=cmmi7 scaled\magstep3 \font\titleiss=cmmi5 scaled\magstep3
\font\titlesy=cmsy10 scaled\magstep3 \font\titlesys=cmsy7 scaled\magstep3
\font\titlesyss=cmsy5 scaled\magstep3 \font\titleit=cmti10 scaled\magstep3
%
%defs
%
\def\tpm{T_{+-}}
\def\tpp{T_{++}}
\def\tmm{T_{--}}
\def\emtf{e^{-2\phi}}
\def\hf{{1\over2}}
\def\fdp{\phi^{\prime\prime}}
\def\rdp{\rho^{\prime\prime}}
\def\etr{e^{2\rho}}
\def\Nfe{{N\over48}}
\def\ppl{\partial_+}
\def\pmi{\partial_-}
\def\etf{e^{2\phi}}
\def\LDV{linear dilaton vacuum}
\def\emts{e^{-2\lambda\sigma}}
\def\Ntf{{N\over24}}
\def\calO{{\cal O}}
\def\emfs{e^{-4\lambda\sigma}}
\def\phic{\phi_{\rm cr}}
\def\emf{e^{-\phi}}
\def\xhp{{\hat x}^+}
\def\xhm{{\hat x}^-}
\def\xp{x^+}
\def\xm{x^-}
\def\Ntw{{N\over12}}
\def\that{{\hat t}}
\def\etfo{e^{2 \phi(0)}}
\font\ticp=cmcsc10
\def\hf{{1\over2}}
\def\sq{{\vbox {\hrule height 0.6pt\hbox{\vrule width 0.6pt\hskip 3pt
   \vbox{\vskip 6pt}\hskip 3pt \vrule width 0.6pt}\hrule height 0.6pt}}}
\def\ajou#1&#2(#3){\ \sl#1\bf#2\rm(19#3)}
\def\apm{{\alpha^\prime}}
\def\psih{{\tilde \psi}}
\def\phit{{\tilde \phi}_0}
\def\frac#1#2{{#1 \over #2}}
\def\vev#1{\langle#1\rangle}
%
\lref\BDDL{T. Banks, A. Dabholkar, M.R. Douglas, and M O'Loughlin, ``Are
horned particles the climax of Hawking evaporation?'' Rutgers preprint
RU-91-54.}
\lref\caru{ C.~Callan, ``Disappearing dyons,''\ajou Phys. Rev. &D25 (82)
2141; ``Dyon - fermion dynamics,''\ajou  Phys. Rev.
&D26 (82) 2058; ``Monopole catalysis of baryon decay,''\ajou Nucl. Phys.
&B212 (83) 391\semi
V. Rubakov, ``Superheavy magnetic monopoles and proton decay,''\ajou
Pis'ma Zh. Eksp. Teor. Fiz. &33 (81) 658 (\ajou JETP
 Lett. &33 (81) 644); ``Adler-Bell-Jackiw anomaly
and fermion number breaking in the presence of a magnetic monopole,''\ajou
Nucl. Phys. &B203 (82) 311.}
\lref\dxbh{S.B. Giddings and A. Strominger, `` Dynamics of
extremal black holes'', UCSB preprint UCSB-TH-92-01, hepth@xxx/9202004,
to appear in {\sl Phys. Rev.} {\bf D}.}
\lref\RST{J.G. Russo, L. Susskind, and L. Thorlacius, ``Black hole
evaporation in 1+1 dimensions,'' Stanford preprint SU-ITP-92-4.}
\lref\HoWi{C.F.E. Holzhey and F. Wilczek, ``Black holes as elementary
particles,'' IAS preprint IASSNS-HEP-91/71.}
\lref\WittSton{E.~Witten, ``On black holes and string theory,'' IAS
preprint (Lecture
notes from Strings and Symmetries '91, Stony Brook).}
\lref\alf{M. Alford and A. Strominger, to appear.}
\lref\evan{C. Callan, S.B. Giddings, J. Harvey and A. Strominger,
``Evanescent Black Holes''
{\sl Phys. Rev.} {\bf D 45} (1992) 1005.}
\lref\Hawk{S. W. Hawking, ``Particle creation by black holes,''
\ajou Comm. Math. Phys. &43 (75) 199.}
\Title{\vbox{\baselineskip12pt
\hbox{UCSB-TH-92-08}\hbox{EFI-92-16}
\hbox{hepth@xxx/9203042}}}
{Quantum Black Holes}
\baselineskip=12pt
\bigskip
\centerline{\ticp Bjorn Birnir,$^*$ Steven B.
Giddings,$^{\dagger}$}
\medskip
\medskip
\centerline{\ticp Jeffrey A. Harvey,$^\#$ and Andrew
Strominger$^{\dagger}$}
\medskip
\bigskip
\centerline{\bf Abstract}

Static solutions of large-$N$ quantum dilaton gravity in $1+1$
dimensions are analyzed and found to exhibit some unusual
behavior. As expected from previous work, infinite-mass solutions are found
describing a black hole in equilibrium with a bath of Hawking radiation.
Surprisingly, the
finite mass solutions are found to approach zero coupling
both at the horizon and spatial infinity,
with a ``bounce'' off of strong coupling in between.
Several new zero mass solutions --  candidate quantum vacua -- are
also described.
\bigskip
\bigskip
\bigskip
\bigskip
\bigskip
\medskip
{\sl $^*$Department of Mathematics, University of California,} {\sl Santa
Barbara, }

{\it CA 93106 Internet: birnir@henri.ucsb.edu}

{\sl$^\dagger$Department of
Physics, University of California,} {\sl Santa Barbara, CA 93106}

{\it
Internet: giddings@denali.physics.ucsb.edu, andy@denali.physics.ucsb.edu}

%{\it
%$^\natural$Bitnet: andy@voodoo}

{$\#$\sl Enrico Fermi Institute, University of Chicago, 5640 Ellis Avenue,

Chicago, IL 60637 }
{\it Internet: harvey@yukawa.uchicago.edu}

\Date{3/92}


\newsec{ Introduction}  %YOU CAN REPLACE I. Introduction WITH ANY HEADING.
                        %THE { AND } ARE ESSENTIAL.

In his seminal work \Hawk\ Hawking argued that the laws of quantum
mechanics, when applied to black holes, predict their own demise: a pure
state which collapses into a black hole evaporates into a mixed final
state.
In the intervening fifteen years,
progress in verifying or refuting his claims has been stymied by several
formidable obstacles. One of these is that regions of Planck scale curvature
and strongly coupled quantum gravity probably arise in four-dimensional
gravitational collapse.  While string theory provides a model for
describing
weakly coupled quantum gravity, a description of
strongly coupled quantum gravity is well
beyond our reach. Another obstacle is the problem of analyzing the
backreaction of
Hawking radiation on the gravitational field.  There are
indications are that this
is qualitatively important in resolving the puzzle of information loss,
yet practical methods for describing it have not been forthcoming.

Recently, a strategy for sidestepping the first obstacle and overcoming
the second was proposed \evan. A great simplification
occurs by considering the problem of black hole formation/evaporation
in a renormalizable theory of ``dilaton'' gravity in ${1}{+}{1}$ dimensions
coupled to conformal matter. This ``toy'' problem contains most of
the important
conceptual issues present in the four-dimensional case, yet is computationally
much more tractable. The region of strongly coupled quantum gravity can be
analyzed within the framework of a ${1}/{N}$ expansion where ${N}$ is the
central charge of the conformal matter. The problem of black hole
formation/evaporation, including the gravitational backreaction, is
thus formally reduced to a system of second order partial differential
equations. In addition to serving as a two-dimensional model for
four-dimensional gravitational collapse, this two-dimensional
theory is also directly relevant to four-dimensional
physics as the effective
theory describing the absorption/re-emission of incident  particles by
certain extremal dilatonic black holes in four dimensions \refs{\evan
\BDDL-\dxbh}.

The analysis of \evan\ expanded the theory around the
``linear dilaton vacuum'' configuration. This is a static solution
of the large ${N}$ equations of motion for which the dilaton varies linearly
across space. Since the dilaton governs the strength of quantum loops,
quantum fluctuations are large in half of space (referred to
as the ``Liouville region'') and small in the other half (the
``dilaton region''). There is a sharp line dividing these
two regions along which the dilaton take the critical value ${\phi} =
{\phic}$. A black hole is potentially formed by sending matter in from the
dilaton region to the Liouville region. While the equations describing
this process were not solved, it was conjectured in \evan\
that the collapsing
matter loses all its energy via Hawking radiation before the black hole
has a chance to form.

This conjecture was shown in \refs{\BDDL,\RST} to be false. In fact something
rather different occurs; when the collapsing matter tries to cross
${\phic}$ from the dilaton to the Liouville region, a singularity
appears \refs{\BDDL,\RST}. This singularity is quite different in
nature from the black hole singularities of the classical theory: it
occurs at the finite value ${\phi} = {\phic}$ (as
opposed to the strong coupling value ${\phi} = {\infty}$,) and the metric
also remains finite at the singularity.
Its physical
significance is somewhat mysterious.

In an attempt to better understand the nature of the
critical line ${\phi} = {\phic}$ separating the two phases, and the physical
implications of the singularities, in this paper we investigate
numerically and analytically the static
solutions of the large-$N$ equations. We find that there is
a rich variety of solutions with some
rather unexpected behavior: there is a tendency to ``bounce'' off of the
critical line. We also find vacuum solutions with greater symmetry than the
\LDV\ which lie wholly within the Liouville region, as well as a zero mass
black hole with a singular horizon which lies entirely within the dilaton
region.

After a brief summary of the relevant formula in section 2, some static
solutions are discussed in section 3. We also argue there that the endpoint
of evaporation of black holes formed in the \LDV\ is a truncated \LDV\
terminated just before a singularity at $\phic$. In section 4 we argue
that the singularities at $\phic$ signal a breakdown of the ${1 \over N}$
expansion, and are conceivably resolved in the exact quantum theory.
The related possibility of defining the large-$N$ theory by boundary
conditions at $\phic$ is also discussed.

\newsec{Summary of Relevant Previous Results}

Classical dilaton gravity coupled to $N$ conformal
matter fields is described by the action
%
\eqn\one
{S= { 1 \over 2\pi}\int d^2 \sigma\sqrt{-g}\Bigl[e^{-2\phi}(R+4(\nabla\phi)^2
+4\lambda^2)
-\half\sum\limits^N_{i=1}(\nabla f_i)^2\Bigr],}
%
where $g$, $\phi$ and $f_i$ are the metric, dilaton, and matter fields,
respectively, and $\lambda^2$ is a cosmological constant.  The matter
fields can be explicitly integrated out to provide an effective action for
the metric and dilaton.  In the conformal gauge this action is
%At the
%quantum level the large-$N$ limit of this theory is described
%by the effective action
%
\eqn\ntythree{\eqalign{S_N &= {1 \over \pi}\int\ d^2\sigma\ \Bigl[e^{-2\phi}
\Bigl( \partial_+(2\phi-\rho)\partial_-(2\phi-\rho)
-\lambda^2 e^{2\rho}\Bigr)\cr
             & + ({N \over 12}-e^{-2\phi} )
\partial_+\rho\partial_-\rho\Bigr]~,\cr}}
%
where we have chosen the conformal gauge
%
\eqn\two
{\eqalign{g_{+-} &=-\half e^{2\rho},\cr
          g_{--} &= g_{++} = 0.\cr}}
%
The term proportional to $N$ is the Liouville term induced by the matter
fields. The equations of motion for $\rho$ and  $\phi$ are
\eqn\rheq{\eqalign{T_{+-}  &= e^{-2\phi}(2\partial_+\partial_-\phi - 4
\partial_+\phi\partial_-\phi - \lambda^2e^{2\rho})\cr
                   &- {N \over 12} \partial_+\partial_-\rho\ =0,\cr}}
%
\eqn\four{-4\partial_+\partial_-\phi + 4\partial_+\phi\partial_-\phi +
2\partial_+\partial_-\rho + \lambda^2 e^{2\rho}=0.}
%
%
%\eqn\five{\partial_+\partial_-f_i=0\ .}
%
Because the action  \ntythree\ is gauge fixed, these equations
of motion should be supplemented by the constraint
\eqn\ntyfour
{\eqalign{T_{++}& = e^{-2\phi} (4\partial_+\phi\partial_+\rho -
2\partial^2_+\phi) \cr
                  & - {N \over 12}\left(\partial_+\rho\partial_+\rho -
\partial^2_+\rho + t_+(\sigma^+)\right)=0,\cr}}
as well as a similar equation for $T_{--}$.\foot{However we note that
the Bianchi identity implies that any solution of \rheq\ - \four\
is also a solution of the constraints for some choice of $t_\pm$.} $t_+$ is an
integration function which must be fixed by boundary conditions.
Solving these large-$N$
equations includes the effects of Hawking radiation as well as the
gravitational backreaction.

     An important solution of these equations is known as the linear
dilaton vacuum:
%
\eqn\ntyfive{\eqalign
{\rho&=0,\cr
  \phi&=-\frac{\lambda}{2} (\sigma^+-\sigma^-).\cr}}
%
This vacuum is divided into two regions by the critical line
\eqn\phcr{\phi=-\half\ln{N \over 12}\equiv \phi_{\rm cr},}
across which, as easily seen from \ntythree, an eigenvalue of the
kinetic operator changes sign. Quantum effects are
small in the region $\phi<\phi_{\rm cr}$, which is referred to as the
dilaton region. The gravitational dynamics are governed by the
Liouville action in the region $\phi>\phi_{\rm cr}$, which is referred to
as the Liouville region.

\newsec{Static solutions}

%An important step towards understanding the dynamics of the evaporating
%black hole of \refs{\CGHS} is determining the final state of the
%evaporation process.  One expects that at late times, once most of the
%mass has been radiated, the black hole should asymptotically approach a
%static solution of the equations (xxx).  Furthermore, from study of the
%static solutions one can gain
%important clues about the evolution of the time dependent solutions since
%in regimes where these evolve slowly they are closely approximated by
%static configurations.

In this section we shall describe some static solutions of
equations \rheq\ -- \ntyfour.
In the static limit these equations become
%
\eqn\static{\eqalign{0&=\tpm= \emtf \left( - \hf \fdp + \phi^{\prime 2} -
\lambda^2 \etr\right) + \Nfe \rdp, \cr
0&=\tpp=\tmm=\emtf\left(\phi' \rho' -\hf \fdp\right) - \Nfe
\left(\rho^{\prime 2} -\rdp +t \right), \cr
0&={\delta S\over \delta \phi} \propto \fdp - \phi^{\prime 2} -\hf \rdp +
\lambda^2 e^{2\rho}, }}
%
where $t$ is a constant and prime denotes $d/d\sigma$, with $\sigma=
\half (\sigma^+-\sigma^-)$.  These equations are of
course redundant; the $\tpm$  and dilaton equations imply the vanishing of
$(\tpp - \tpm)'$.  The $\tpm$ and dilaton equations can also be rewritten in
the form
%
\eqn\nstatic{\eqalign{&\left( 1-{N \etf \over 24} \right) \rdp =\fdp , \cr
&\hf \left(1-{N \etf \over12}\right) \fdp = \left(1-{N \etf \over 24}
\right) \left( \phi^{\prime 2} - \lambda^2 \etr\right),}}
%
which will be convenient for later use.

\subsec{Quantum Kinks}
%Bouncing Solutions}
Solutions to equations \static\ may be specified by fixing $\rho$, $\phi$, and
their derivatives at infinity. The mass of a solution asymptotic to
\ntyfive\ is
\eqn\mss{M=2e^{2\lambda\sigma}(\lambda\delta\rho+\delta\phi ')}
evaluated at infinity
where $\delta\rho,~\delta\phi$ are the deviations from \ntyfive.
We are in particular interested in
solutions asymptotic to the linear dilaton vacuum, with finite mass and
with no incoming or outgoing energy flux at infinity.  These are candidates
for the final state of black hole evaporation.
The asymptotic behavior of such solutions can be determined by linearizing
\static\ around the \LDV\ in the gauge \ntyfive.
The resulting equations can be put in the form
%
\eqn\linear{\eqalign{ 2 \lambda\delta\phi'& + 2 \lambda^2\delta\rho -
\lambda
\delta\rho' =
\Nfe\emts t,\cr \delta \fdp& = \delta\rdp \left(1-\Ntf \emts\right). }}
%
Solving \linear\ for the asymptotic perturbations of the \LDV\ yields an
infinite mass solution for $t\neq0$.  This makes physical sense:  $t\neq0$
corresponds to a constant incoming and outgoing energy flux, and the
solution has divergent ADM mass.  Such solutions, while perhaps interesting
for other reasons, are therefore not candidates for the final state of
black hole evaporation.

With $t=0$, the asymptotic solutions are of the form
%
\eqn\asymp{\eqalign{\delta\rho& = -{ M \over 2 \lambda}\emts +
\calO\left(\emfs\right)\cr
\delta\phi& = -{M \over 2 \lambda} \emts + \calO \left(\emfs\right) }}
%
and have finite mass $M$.  To find the geometry of these solutions one can
integrate the equations \static\ in from infinity.
$t=0$ defines an invariant surface of fixed $\tpp -\tpm$.  Different orbits
are chosen by initial data on this surface as illustrated in
figures 1a through 1d.  These are
solutions with distinct masses that asymptotically approach the linear
dilaton vacuum.

These solutions may be qualitatively understood as follows.  Asymptotically
they approach the \LDV\ plus the perturbations in \asymp.  Integrating in
from infinity, for positive
mass one finds from \nstatic\ that $\fdp<0$ and so they begin to turn over.
$\fdp$ becomes very large and negative in the
critical region $\phi \simeq \phic = -\hf \ln(N/12)$.  In this
vicinity an approximate solution can be found by setting
$\rho=$constant$=0$ and $\phi = \phic + \varphi$, where $|\varphi|\ll
|\phic|$.  (The consistency of this can then be checked using the full
equations.)  The resulting equation is
%%
\eqn\perteq{ - \varphi^{\prime\prime} \varphi \simeq \hf \left(
\varphi^{\prime 2} -\lambda^2 \right),}
%%
with first integral
%%
\eqn\fiint{\varphi^{\prime 2} - {A\over \varphi} \simeq \lambda^2,}
%%
where $A$ is an integration constant.  For positive mass, $A>0$ and the
equation is that for motion of a particle in a repulsive potential centered
at $\varphi=0$ (note that $\varphi<0$).  Hence $\phi $
bounces near $\phi=\phic$ ($\phi '$ flips from roughly
$-\lambda$ to $+\lambda$) and then begins to decrease towards $\sigma=-\infty$.
The sharp turnover in $\phi$ also forces $\rho '$ to jump, by
\nstatic.  $\rho$ is then found to be asymptotically linear and approaches
minus infinity.

The qualitative behavior as $\sigma\rightarrow -\infty$ can also be
understood, using the fact that $\etr$ becomes negligible as
$\rho\rightarrow - \infty$.  Without this term the equations can be
integrated to find
%
\eqn\integ{\eqalign{\emtf& = -{N\over12}\rho + a\sigma +b,\cr
{\emf}&\sqrt{ \emtf -\Ntw} - {\Ntw} \ln
\left[\sqrt{ \emtf -\Ntw} +  \emf \right] = -a\sigma +c,}}
%
where $a,b$, and $c$ are constants.  These have asymptotic solutions as
$\sigma\rightarrow -\infty$
%
\eqn\asympsoln{\eqalign{\emtf &\sim -a \sigma + \Ntf \ln ( -a\sigma
) + \cdots ,\cr
ds^2 &\sim { e^{48a\sigma/N} \over -a\sigma }(1 + \cdots) (-d\tau^2 +
d\sigma^2)\ .}}
%
One sees that $\sigma=-\infty$ is in fact an event horizon at finite
distance, and its vicinity is more easily investigated by introducing the
new coordinates
%
\eqn\newcoor{\xp=e^{24a\sigma^+/N}\ ,\ \xm = -e^{-24a\sigma^-/N}\ .}
%
{}From \asympsoln\ one finds infinite curvature at  $\xp=0$ and
$\xm=0$; the horizon is singular.  The singularity occurs at zero
coupling.
% and its action is infinite due to the singularity.  For this
%reason these solutions, although finite mass, are not good candidates
%for the final state.

As the mass goes to zero, the solution gets
closer and closer to $\phic$ before bouncing back to weak coupling.
Furthermore, it is very close to the \LDV\ outside a region whose boundary
gets closer to $\phic$. A configuration can be defined in
the zero mass limit which agrees with the \LDV\ up to $\phic$, but then
bounces back to weak coupling ($\phi=-\infty$) rather than continuing
on to strong coupling ($\phi=+\infty$). The existence of distinct
``solutions'' which agree up to $\phic$ but then disagree afterwards is due
to the fact that the equations themselves degenerate at $\phic$. To
resolve this ambiguity one must go beyond the large-$N$ limit, as
will be discussed
in the last section.

Is this zero mass bounce
solution a plausible endpoint for black hole evaporation?
We think not. As described in \refs{\RST,\BDDL}, the black holes formed
by $f$-wave collapse have a dilaton which increases monotonically
up to a singularity at $\phic$. The static solutions described here are
non-singular at $\phic$: rather they bounce off of $\phic$ and reach a
singularity at $\phi=-\infty$. It is hard to see how the black holes
formed in a collapse process
could smoothly evolve into such a configuration.

It is tempting to try to instead interpret the zero mass bounce solution
as the true quantum vacuum of the theory. The singularities described in
\refs{\RST,\BDDL} might then be viewed as punishment for expanding
around the wrong vacuum. Making sense of this idea would require
finding
some sensible choice of boundary conditions at the horizon, as well
as for propagating through the kink at $\phic$; we have done neither.

\subsec{Quantum Black Holes}
The conditions for solutions with regular horizons are most easily
investigated by introducing a new spatial coordinate $s=-\xp\xm$, so that the
horizon is at $s=0$.  In terms of this coordinate the static equations
become
%
\eqn\seqns{\eqalign{&-2\phi' -2s\fdp + 4s \phi^{\prime 2} -\lambda^2
 \etr = -\Ntw \etf
\left(s \rdp + \rho'\right)\quad (+-)\cr
&4\phi'\rho'-2\fdp = \Ntw\etf\left(\rho^{\prime 2} -\rdp + {\that \over
s^2}\right)\quad (++,--)\cr & 4\phi' +4s\fdp -4s \phi^{\prime 2} -2 \rho' -2s
\rdp +\lambda^2\etr =0\quad ({\rm Dilaton}). }}
%
The conditions for the solution to be regular at the horizon then
follows from finiteness of $\fdp$ and $\rdp$ or, equivalently, the
vanishing of $s\fdp$ and $s\rdp$ at $s=0$. One finds
%
\eqn\rhor{\eqalign{\rho'(0)& = -{\lambda^2 \over 2} {e^{2\rho(0)}\over 1-\Ntw
\etfo},\cr
\phi'(0)& = -{\lambda^2 \over 2}
e^{2\rho(0)} {1-\Ntf \etfo \over 1- \Ntw \etfo},\cr
\that&=0\ .
}}
%
When translated into $\sigma$ coordinates the last condition implies that
$t_\pm=-\lambda^2/4\neq0$. In the $s$ coordinates $t=0$ generically implies
non-zero Hawking flux.
This means that the solutions with regular horizons only remain static
when supported by an incoming flux that matches the outgoing Hawking flux,
as expected.
This non-zero radiation density extending out to infinity implies that
these solutions
have infinite mass.
Numerical plots of these solutions can be found in figures 2a,b.
They can be continued across
the horizon, and a singularity appears at $\phi=\phic$.  The solutions
therefore have causal structures identical to the classical black hole.
Although they are not candidates for the final state, they approximate a
slowly evaporating black hole before it reaches zero mass.
\subsec{The Endpoint of Black Hole Evaporation}
To summarize the results up to this point, we have found static solutions
of two types:

\item{1.}{\it Solutions with $0<M<\infty$.  These have horizons with weak
coupling singularities.}

\item{2.}{\it Black holes with regular horizons.  These are solutions with
constant incoming radiation to balance the outgoing Hawking radiation, and
thus have infinite mass.}

Neither of these two types of solutions are good candidates for the final
state.  The only remaining candidate is at $M=0$:  the linear dilaton
vacuum.  However, because of the singularity at $\phi=\phic$, one should
terminate the \LDV\ just to the right of $\phic$.  One therefore presumes
that in the far future the solution formed from infalling matter
settles down to the \LDV\ for
$\phi$ in the range less than $\phic -\epsilon$, for some small $\epsilon$
which approaches zero in the infinite future. Thus the best candidate for
the  endpoint
of black hole evaporation may be pictured as the \LDV\ truncated
just before the end of the universe at $\phic$.


\subsec{The Liouville Region.}
In the preceding, static solutions which approached weak coupling at spatial
infinity were discussed. It is also of interest to consider solutions which
remain wholly within the Liouville region. Since the main problems are
associated with the crossover between the two regions, perturbation theory
around such solutions may well be better defined. Furthermore, as argued
in \refs{\BDDL,\dxbh}, such solutions are physically
relevant to the description of four-dimensional extremal black holes
for which the asymptotic value $\phi_0$ of the dilaton obeys
$\phi_0 >\phic$.

The simplest such solution is the vacuum configuration
\eqn\lvac{\eqalign{
{e^{-2\phi}}&={0},\cr
{\rho}&={0}.\cr}}
Perturbation theory about this vacuum can be defined in terms
of the variable\foot{We require ${\psi}$, but not ${\phi}$,
to be real.}
\eqn\psidef{
{\psi}\,\,{\equiv}\,\,{e^{-\phi},}}
in terms of which the large ${N}$ gravitational action becomes:
\eqn\psiact{
\eqalign{
{S}&= {{1}\over{\pi}}\,\,{\int}\,\,{d^2}{\sigma} ({4}{\partial}_+{\psi}
{\partial}_-{\psi} + {4}{\psi}{\partial}_+{\psi}{\partial}_-{\rho}\cr
&\qquad - {\lambda^2}{\psi^2}{e^{2\rho}}
 + {{N}\over{12}}\,\,{\partial}_+{\rho}{\partial}_-{\rho}).\cr}}
Excitations about this vacuum are characterized by the conserved
energy:
\eqn\lien{
\eqalign{
{E}&= {-\hf}\,\,{\int}\,\,{d}{\sigma}\,\,
\biggl[({2}{\partial}_+{\psi} + {\psi}{\partial}
_+{\rho})^2 + ({2}{\partial}_-{\psi} + {\psi}{\partial}_-{\rho})^2\cr
&\qquad + {2}{\lambda^2}{\psi^2} {e^{2\rho}} +
\biggl({{N}\over{12}} - {\psi^2}\biggr)\,\,
\biggl(({\partial}_+{\rho})^2 + ({\partial}_-{\rho})^2\biggr)
+\Ntw(t_++t_-)\biggr].\cr}}
$E$ may also be expressed as a surface integral:
\eqn\esrf{E=-\hf\biggl[\Ntw (\ppl -\pmi )\rho+2\psi(\ppl -\pmi
)\psi\biggr]^{+\infty}_{-\infty},}
from which it is evident that $E=0$ for configurations asymptotic to \lvac.
A non-zero conserved quantity
\eqn\lien{
\eqalign{
{\hat E}&= \,\,\hf{\int}\,\,{d}{\sigma}\,\,
\biggl[({2}{\partial}_+{\psi} + {\psi}{\partial}
_+{\rho})^2 + ({2}{\partial}_-{\psi} + {\psi}{\partial}_-{\rho})^2\cr
&\qquad + {2}{\lambda^2}{\psi^2} {e^{2\rho}} +
\biggl({{N}\over{12}} - {\psi^2}\biggr)\,\,
\biggl(({\partial}_+{\rho})^2 + ({\partial}_-{\rho})^2\biggr)
\biggr].\cr}}
can also be defined by virtue of the fact that $t_\pm$ are functions only
of $x^\pm$. Note that for
${\psi^2}<{{N}\over{12}}$, which defines the Liouville region, $\hat E$
is positive semi-definite which constrains
possible choices of of $t_\pm$.

There is also a static solution corresponding to anti- deSitter space
with a constant dilaton.
It is easy to see directly from \rheq\ and \four\ that the
field configuration
\eqn\desit{\eqalign{\emtf &= \Ntf,\cr
R&=8e^{-2\rho}\partial_+\partial_-\rho=-4\lambda^2, \cr}}
is a solution. In static coordinates $\rho$ is given by
\eqn\rdes{\rho=-\ln ( \sqrt 2 \lambda\sigma).}
%

\newsec{Discussion}

In \refs{\RST,\BDDL} it was argued in the quantum theory that a small
perturbation of the linear
dilaton vacuum produces a black hole. The black hole then evaporates
leaving in its place a configuration close to the linear dilaton vacuum
until very near ${\phi} = {\phic}$, at which point there is a singularity.
Thus the linear dilaton vacuum is unstable under small perturbations, and
is in this sense not the true vacuum of the theory. A candidate for the
true vacuum is the zero-mass configuration with a singularity at ${\phi}
 = {\phic}$. One should endeavor to understand this configuration.

Can we really reliably conclude that there is a singularity at ${\phi}
= {\phic}$? The answer to this is no, because the ${1}/{N}$ expansion
breaks down before the singularity is reached, and the equations used
to find the singularity are not a good approximation to the quantum theory
described by \one. In terms of Feynman diagrams for perturbation theory
about the linear dilaton vacuum, the large-${N}$ action \ntythree\
describes graviton-dilaton tree diagrams plus one loop matter.
Graviton-dilaton loops are suppressed as long as the propagator is of order
${1}/{N}$. Equivalently, the determinant of the matrix ${K}$ governing
small fluctuations of, ${\rho}$, ${\phi}$ should be of order ${N}^2$. That
determinant is given by
\eqn\kdet{
{\rm det}\,\,{K} = {e^{-2\phi}}\,\,\biggl({e^{-2\phi}} -
{{N}\over{12}}\biggr).}
This is indeed of order ${N^2}$ in both the Liouville and dilaton
regions for ${e^{-2\phi}}$ of order ${N}$, {\it except} when ${e^{-2\phi}}$
is near ${{N}\over{12}}$, which demarcates the two regions of the
linear dilaton vacuum. Since
${\phi} =- {\lambda}{\sigma}$, the ${1}/{N}$ expansion breaks down in
a region of width of order ${\lambda^{-1}}$ containing the critical line or,
equivalently wherever $\phi$ differs from $\phic$ by an amount less than one.
Large ${N}$ fails to suppress quantum fluctuations of the dilaton and
metric within this region.

In a sense this brings us back to where we started from; the interesting
physics occurs in a region outside the reach of perturbation theory. Large
${N}$ has failed to fully tame strongly coupled quantum gravity. However,
some small progress has nevertheless been made in the following sense. The
breakdown of large-${N}$ perturbation theory is limited to a small
region of width ${\lambda^{-1}}$ (in contrast to ordinary perturbation
theory, which is bad in half of spacetime). If
we restrict our attention to processes on scales large compared to ${\lambda
^{-1}}$,\foot{This is in any case necessary if the two-dimensional
theory is viewed as an effective theory for four-dimensional black holes.}
this region is effectively a one dimensional line.

Progress might then be made if one {\it assumes} that the exact quantum
theory has a well-defined evolution. (Of course we have no evidence
in favor of this; it is important and difficult to find out
if this is indeed the case.) This exact quantum theory will then imply
some effective boundary conditions along the critical line in the
effective theory at scales larger than ${\lambda^{-1}}$. Constraints
on these boundary conditions can be derived from consistency of the low energy
theory.\foot{This is reminiscent of the problem of fermion-monopole
scattering analyzed by Callan and Rubakov \caru.} In the following
we consider two possible types of boundary conditions.

\subsec{ Bouncing off the singularity.}

In this picture the universe ends at ${\phi} = {\phic}$ (or just before
there,
so that the large-$N$ equations are valid), and boundary
conditions must be imposed there. In the vacuum, this line is timelike
(if it is drawn just before $\phic$), so
it might appear sensible to apply Dirichlet or Neumann boundary conditions
there. One might hope that, rather than leaving the universe, information
can be reflected off of the boundary line.
However there appears to be a severe problem with this: the effect
of throwing matter at the line $\phi=\phic$ is to change the
trajectory of the boundary from a timelike one to a spacelike one \RST.
No local boundary condition can alter this conclusion. It does not seem
possible to define sensible, unitary dynamics for a system with
spacelike boundaries.

\subsec { Sailing through the Singularity.}

Another possibility is that the boundary conditions give a prescription for
continuing through the singularity. It is well-known that there are
certain types of mild ``shock-wave'' singularities in general relativity
which do not prevent a unique and consistent evolution. The present
class of singularities are in fact quite mild -- neither the dilaton or
metric diverge, while their first derivatives typically blow up like
${t}^{-1/3}$ as the singularity is approached. There is a
substantial literature on the problem of continuing through singularities
arising in
PDE's of this general type.   It in fact appears
likely that it is possible to find a rule for continuing through
the singularity -- the difficulty is in keeping all the fields real while
doing so. Work on this issue is in progress.

\centerline{\bf ACKNOWLEDGMENTS}
We have been informed that related results
have been independently
obtained by S. Hawking and by L. Susskind and L. Thorlacius.
We are grateful to them for discussing their results with
us prior to publication, and to G. Horowitz for useful discussions.
This work
was supported in part by DOE grant DE-FG03-91ER40168, NSF grants
PHY90-00386, DMS91-04532 and by
NSF PYI grants, PHY-9157463 to S.B.G. and PHY-9196117 to J.A.H.
\centerline{\bf NOTE ADDED}
Hawking's work has appeared in ``Evaporation of Two Dimensional
Black Holes'' Caltech preprint CALT-68-1774 and hepth@xxx/9203052,
and Susskind and Thorlacius' work has appeared in
``Hawking Radiation and Back-Reaction'' Stanford preprint
SU-ITP-92-12 and hepth@xxx/9203054.

\listrefs

\vfil\eject

\centerline{\bf Figure Captions}
\bigskip
\item{~~~Fig.~1a.} A plot of $\phi$ versus $\sigma$ for quantum kinks of
mass $M=\lambda, 10\lambda,
50\lambda$ for $\phic=-2$. Integrating in from infinity, the solutions closely
resemble
the linear dilaton vacuum until $\phic$ is reached, at which point the
solutions bounce back towards weak coupling at minus infinity.

\item {Fig.~1b.} A plot of $\rho$ versus $\sigma$ for quantum kinks of
mass $M=\lambda, 10\lambda,
50\lambda$ for $\phic=-2$. Integrating in from infinity,
$\rho$ is nearly zero until the bounce occurs. It asymptotes to
minus infinity at $\sigma=-\infty$ with a constant linear slope plus
logarithmic corrections.
This implies that $\sigma=-\infty$ is a finite distance away, and that
there is a horizon there.


\item{Fig.~1c.} A plot of $\phi$ versus $s=e^{2\lambda\sigma}$ for quantum
kinks of
mass $M=\lambda, 10\lambda,
50\lambda$ for $\phic=-2$. The horizon is pulled into $s=0$ in these
coordinates, and it is evident that the dilaton goes to zero coupling
there.


\item{Fig.~1d.} A plot of $\rho$ versus $s=e^{2\lambda\sigma}$ for quantum
kinks of
mass $M=\lambda, 10\lambda,
50\lambda$ for $\phic=-2$. $\rho$ diverges on the horizon.


\item{Fig.~2a.} A plot of $\phi$ versus $s=e^{2\lambda\sigma}$ for a black hole
in equilibrium with Hawking radiation. The initial conditions are chosen so
as to ensure regularity at the horizon ($s=0$). Inside the horizon,
where $s<0$ is a timelike coordinate, $\phi$ rapidly increases and
reaches a singularity at $\phic=-2$ in finite time.


\item{Fig.~2b.} A plot of $\rho$ versus $s$ for a black hole in equilibrium
with Hawking radiation.

\end

%fig1a

%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Mar 17 13:28:58 PST 1992
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{
1 index
Mget
exch
}
forall
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: .61803
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
.295918 .136054 1.11246 .247214 [
[(-2)] 0.02381 0 0 2 0 Minner Mrotsboxa
[(-1)] .15986 0 0 2 0 Minner Mrotsboxa
[(0)] .29592 0 0 2 0 Minner Mrotsboxa
[(1)] .43197 0 0 2 0 Minner Mrotsboxa
[(2)] .56803 0 0 2 0 Minner Mrotsboxa
[(3)] .70408 0 0 2 0 Minner Mrotsboxa
[(4)] .84014 0 0 2 0 Minner Mrotsboxa
[(5)] .97619 0 0 2 0 Minner Mrotsboxa
[(sigma)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-4.5)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-4)] -0.0125 .12361 1 0 0 Minner Mrotsboxa
[(-3.5)] -0.0125 .24721 1 0 0 Minner Mrotsboxa
[(-3)] -0.0125 .37082 1 0 0 Minner Mrotsboxa
[(-2.5)] -0.0125 .49443 1 0 0 Minner Mrotsboxa
[(-2)] -0.0125 .61803 1 0 0 Minner Mrotsboxa
[(phi)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(Fig. 1a)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.00625 lineto
stroke
grestore
[(-2)] 0.02381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.15986 0 moveto
.15986 0.00625 lineto
stroke
grestore
[(-1)] .15986 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.29592 0 moveto
.29592 0.00625 lineto
stroke
grestore
[(0)] .29592 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.43197 0 moveto
.43197 0.00625 lineto
stroke
grestore
[(1)] .43197 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.56803 0 moveto
.56803 0.00625 lineto
stroke
grestore
[(2)] .56803 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.70408 0 moveto
.70408 0.00625 lineto
stroke
grestore
[(3)] .70408 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.84014 0 moveto
.84014 0.00625 lineto
stroke
grestore
[(4)] .84014 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.97619 0 moveto
.97619 0.00625 lineto
stroke
grestore
[(5)] .97619 0 0 2 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0.05102 0 moveto
0.05102 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07823 0 moveto
0.07823 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.10544 0 moveto
.10544 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.13265 0 moveto
.13265 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.18707 0 moveto
.18707 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 0 moveto
.21429 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.2415 0 moveto
.2415 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.26871 0 moveto
.26871 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.32313 0 moveto
.32313 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35034 0 moveto
.35034 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.37755 0 moveto
.37755 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 0 moveto
.40476 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45918 0 moveto
.45918 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.48639 0 moveto
.48639 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.51361 0 moveto
.51361 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54082 0 moveto
.54082 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 0 moveto
.59524 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.62245 0 moveto
.62245 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64966 0 moveto
.64966 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.67687 0 moveto
.67687 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.73129 0 moveto
.73129 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.7585 0 moveto
.7585 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 0 moveto
.78571 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.81293 0 moveto
.81293 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.86735 0 moveto
.86735 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.89456 0 moveto
.89456 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92177 0 moveto
.92177 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.94898 0 moveto
.94898 0.00375 lineto
stroke
grestore
[(sigma)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0 moveto
0.00625 0 lineto
stroke
grestore
[(-4.5)] -0.0125 0 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .12361 moveto
0.00625 .12361 lineto
stroke
grestore
[(-4)] -0.0125 .12361 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .24721 moveto
0.00625 .24721 lineto
stroke
grestore
[(-3.5)] -0.0125 .24721 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .37082 moveto
0.00625 .37082 lineto
stroke
grestore
[(-3)] -0.0125 .37082 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .49443 moveto
0.00625 .49443 lineto
stroke
grestore
[(-2.5)] -0.0125 .49443 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .61803 moveto
0.00625 .61803 lineto
stroke
grestore
[(-2)] -0.0125 .61803 1 0 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0 0.02472 moveto
0.00375 0.02472 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.04944 moveto
0.00375 0.04944 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.07416 moveto
0.00375 0.07416 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.09889 moveto
0.00375 0.09889 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .14833 moveto
0.00375 .14833 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .17305 moveto
0.00375 .17305 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .19777 moveto
0.00375 .19777 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .22249 moveto
0.00375 .22249 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .27193 moveto
0.00375 .27193 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .29666 moveto
0.00375 .29666 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .32138 moveto
0.00375 .32138 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .3461 moveto
0.00375 .3461 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .39554 moveto
0.00375 .39554 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .42026 moveto
0.00375 .42026 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .44498 moveto
0.00375 .44498 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .46971 moveto
0.00375 .46971 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .51915 moveto
0.00375 .51915 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .54387 moveto
0.00375 .54387 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .56859 moveto
0.00375 .56859 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .59331 moveto
0.00375 .59331 lineto
stroke
grestore
[(phi)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
0 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
0.02381 .61178 moveto
0.02381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.15986 .61178 moveto
.15986 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.29592 .61178 moveto
.29592 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.43197 .61178 moveto
.43197 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.56803 .61178 moveto
.56803 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.70408 .61178 moveto
.70408 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.84014 .61178 moveto
.84014 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.97619 .61178 moveto
.97619 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05102 .61428 moveto
0.05102 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07823 .61428 moveto
0.07823 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.10544 .61428 moveto
.10544 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.13265 .61428 moveto
.13265 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.18707 .61428 moveto
.18707 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 .61428 moveto
.21429 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.2415 .61428 moveto
.2415 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.26871 .61428 moveto
.26871 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.32313 .61428 moveto
.32313 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35034 .61428 moveto
.35034 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.37755 .61428 moveto
.37755 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 .61428 moveto
.40476 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45918 .61428 moveto
.45918 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.48639 .61428 moveto
.48639 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.51361 .61428 moveto
.51361 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54082 .61428 moveto
.54082 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 .61428 moveto
.59524 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.62245 .61428 moveto
.62245 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64966 .61428 moveto
.64966 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.67687 .61428 moveto
.67687 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.73129 .61428 moveto
.73129 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.7585 .61428 moveto
.7585 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 .61428 moveto
.78571 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.81293 .61428 moveto
.81293 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.86735 .61428 moveto
.86735 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.89456 .61428 moveto
.89456 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92177 .61428 moveto
.92177 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.94898 .61428 moveto
.94898 .61803 lineto
stroke
grestore
[(Fig. 1a)] .5 .61803 0 -4 Mshowa
gsave
0.002 setlinewidth
0 .61803 moveto
1 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .12361 moveto
1 .12361 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .24721 moveto
1 .24721 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .37082 moveto
1 .37082 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .49443 moveto
1 .49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.02472 moveto
1 0.02472 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.04944 moveto
1 0.04944 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.07416 moveto
1 0.07416 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.09889 moveto
1 0.09889 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .14833 moveto
1 .14833 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .17305 moveto
1 .17305 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .19777 moveto
1 .19777 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .22249 moveto
1 .22249 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .27193 moveto
1 .27193 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .29666 moveto
1 .29666 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .32138 moveto
1 .32138 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .3461 moveto
1 .3461 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .39554 moveto
1 .39554 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .42026 moveto
1 .42026 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .44498 moveto
1 .44498 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .46971 moveto
1 .46971 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .51915 moveto
1 .51915 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .54387 moveto
1 .54387 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .56859 moveto
1 .56859 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .59331 moveto
1 .59331 lineto
stroke
grestore
gsave
0.002 setlinewidth
1 0 moveto
1 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
.29592 0 moveto
.29592 .61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 .61803 lineto
0 .61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 .419 moveto
0.06349 .42595 lineto
.10317 .43337 lineto
.14286 .44134 lineto
.18254 .44996 lineto
.22222 .45934 lineto
.2619 .46965 lineto
.30159 .48111 lineto
.34127 .49405 lineto
.38095 .50893 lineto
.42063 .52642 lineto
.46032 .54743 lineto
.5 .57234 lineto
.51984 .58479 lineto
.5248 .58744 lineto
.52976 .58969 lineto
.53224 .59061 lineto
.53472 .59137 lineto
.53596 .59168 lineto
.5372 .59195 lineto
.53844 .59216 lineto
.53968 .59232 lineto
.54092 .59242 lineto
.54216 .59247 lineto
.5434 .59245 lineto
.54464 .59237 lineto
.54588 .59223 lineto
.54712 .59203 lineto
.5496 .59142 lineto
.55084 .59102 lineto
.55208 .59056 lineto
.55456 .58944 lineto
.55952 .58649 lineto
.56944 .57812 lineto
.57937 .56725 lineto
.61905 .51094 lineto
.65873 .44575 lineto
.69841 .37709 lineto
.7381 .30681 lineto
.77778 .23569 lineto
.81746 .16413 lineto
.85714 0.09233 lineto
.89683 0.02039 lineto
stroke
.90806 0 moveto
.89683 0.02039 lineto
stroke
stroke
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 .38489 moveto
0.06349 .39207 lineto
.10317 .39974 lineto
.14286 .40798 lineto
.18254 .41688 lineto
.22222 .42655 lineto
.2619 .43718 lineto
.30159 .44897 lineto
.34127 .46224 lineto
.38095 .47748 lineto
.42063 .49544 lineto
.46032 .51744 lineto
.5 .546 lineto
.51984 .56418 lineto
.53968 .58619 lineto
.5496 .59893 lineto
.55456 .60564 lineto
.55704 .60899 lineto
.55952 .61215 lineto
.56076 .61355 lineto
.562 .61467 lineto
.56324 .61525 lineto
.56448 .61506 lineto
.56572 .61416 lineto
.56696 .61281 lineto
.56944 .60945 lineto
.57937 .59346 lineto
.61905 .52373 lineto
.65873 .45243 lineto
.69841 .3807 lineto
.7381 .30879 lineto
.77778 .23679 lineto
.81746 .16474 lineto
.85714 0.09267 lineto
.89683 0.02058 lineto
stroke
.90815 0 moveto
.89683 0.02058 lineto
stroke
stroke
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 .43289 moveto
0.06349 .43858 lineto
.10317 .44458 lineto
.14286 .45095 lineto
.18254 .45772 lineto
.22222 .46494 lineto
.2619 .47268 lineto
.30159 .48099 lineto
.34127 .48989 lineto
.38095 .49933 lineto
.42063 .50897 lineto
.44048 .5136 lineto
.46032 .51781 lineto
.47024 .51965 lineto
.48016 .52123 lineto
.49008 .52249 lineto
.49504 .52297 lineto
.49752 .52317 lineto
.5 .52333 lineto
.50248 .52347 lineto
.50496 .52357 lineto
.5062 .52361 lineto
.50744 .52364 lineto
.50868 .52366 lineto
.50992 .52367 lineto
.51116 .52367 lineto
.5124 .52366 lineto
.51364 .52364 lineto
.51488 .52361 lineto
.51612 .52357 lineto
.51736 .52352 lineto
.51984 .52339 lineto
.52232 .52321 lineto
.5248 .52299 lineto
.52976 .52239 lineto
.53472 .52159 lineto
.53968 .52056 lineto
.5496 .51782 lineto
.55952 .51407 lineto
.56944 .50926 lineto
.57937 .50336 lineto
.59921 .48832 lineto
.61905 .46919 lineto
.65873 .42079 lineto
.69841 .36269 lineto
.7381 .29863 lineto
.77778 .23108 lineto
.81746 .16155 lineto
.85714 0.09088 lineto
.89683 0.01958 lineto
Mistroke
Mfstroke
.90767 0 moveto
.89683 0.01958 lineto
stroke
stroke
stroke
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage


%fig1b

%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Mar 17 13:27:27 PST 1992
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{
1 index
Mget
exch
}
forall
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: .61803
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
.5 0.047619 .598097 0.0199366 [
[(-10)] 0.02381 0 0 2 0 Minner Mrotsboxa
[(-5)] .2619 0 0 2 0 Minner Mrotsboxa
[(0)] .5 0 0 2 0 Minner Mrotsboxa
[(5)] .7381 0 0 2 0 Minner Mrotsboxa
[(10)] .97619 0 0 2 0 Minner Mrotsboxa
[(sigma)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-30)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-25)] -0.0125 0.09968 1 0 0 Minner Mrotsboxa
[(-20)] -0.0125 .19937 1 0 0 Minner Mrotsboxa
[(-15)] -0.0125 .29905 1 0 0 Minner Mrotsboxa
[(-10)] -0.0125 .39873 1 0 0 Minner Mrotsboxa
[(-5)] -0.0125 .49841 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .5981 1 0 0 Minner Mrotsboxa
[(rho)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(Fig. 1b)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.00625 lineto
stroke
grestore
[(-10)] 0.02381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.2619 0 moveto
.2619 0.00625 lineto
stroke
grestore
[(-5)] .2619 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.5 0 moveto
.5 0.00625 lineto
stroke
grestore
[(0)] .5 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.7381 0 moveto
.7381 0.00625 lineto
stroke
grestore
[(5)] .7381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.97619 0 moveto
.97619 0.00625 lineto
stroke
grestore
[(10)] .97619 0 0 2 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0.07143 0 moveto
0.07143 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.11905 0 moveto
.11905 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.16667 0 moveto
.16667 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 0 moveto
.21429 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.30952 0 moveto
.30952 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35714 0 moveto
.35714 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 0 moveto
.40476 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45238 0 moveto
.45238 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54762 0 moveto
.54762 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 0 moveto
.59524 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64286 0 moveto
.64286 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69048 0 moveto
.69048 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 0 moveto
.78571 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83333 0 moveto
.83333 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.88095 0 moveto
.88095 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92857 0 moveto
.92857 0.00375 lineto
stroke
grestore
[(sigma)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0 moveto
0.00625 0 lineto
stroke
grestore
[(-30)] -0.0125 0 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 0.09968 moveto
0.00625 0.09968 lineto
stroke
grestore
[(-25)] -0.0125 0.09968 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .19937 moveto
0.00625 .19937 lineto
stroke
grestore
[(-20)] -0.0125 .19937 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .29905 moveto
0.00625 .29905 lineto
stroke
grestore
[(-15)] -0.0125 .29905 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .39873 moveto
0.00625 .39873 lineto
stroke
grestore
[(-10)] -0.0125 .39873 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .49841 moveto
0.00625 .49841 lineto
stroke
grestore
[(-5)] -0.0125 .49841 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .5981 moveto
0.00625 .5981 lineto
stroke
grestore
[(0)] -0.0125 .5981 1 0 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0 0.01994 moveto
0.00375 0.01994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.03987 moveto
0.00375 0.03987 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.05981 moveto
0.00375 0.05981 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.07975 moveto
0.00375 0.07975 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .11962 moveto
0.00375 .11962 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .13956 moveto
0.00375 .13956 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .15949 moveto
0.00375 .15949 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .17943 moveto
0.00375 .17943 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .2193 moveto
0.00375 .2193 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .23924 moveto
0.00375 .23924 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .25918 moveto
0.00375 .25918 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .27911 moveto
0.00375 .27911 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .31899 moveto
0.00375 .31899 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .33892 moveto
0.00375 .33892 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .35886 moveto
0.00375 .35886 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .3788 moveto
0.00375 .3788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .41867 moveto
0.00375 .41867 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .4386 moveto
0.00375 .4386 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .45854 moveto
0.00375 .45854 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .47848 moveto
0.00375 .47848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .51835 moveto
0.00375 .51835 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .53829 moveto
0.00375 .53829 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .55822 moveto
0.00375 .55822 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .57816 moveto
0.00375 .57816 lineto
stroke
grestore
[(rho)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
0 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
0.02381 .61178 moveto
0.02381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.2619 .61178 moveto
.2619 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.5 .61178 moveto
.5 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.7381 .61178 moveto
.7381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.97619 .61178 moveto
.97619 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07143 .61428 moveto
0.07143 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.11905 .61428 moveto
.11905 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.16667 .61428 moveto
.16667 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 .61428 moveto
.21429 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.30952 .61428 moveto
.30952 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35714 .61428 moveto
.35714 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 .61428 moveto
.40476 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45238 .61428 moveto
.45238 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54762 .61428 moveto
.54762 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 .61428 moveto
.59524 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64286 .61428 moveto
.64286 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69048 .61428 moveto
.69048 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 .61428 moveto
.78571 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83333 .61428 moveto
.83333 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.88095 .61428 moveto
.88095 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92857 .61428 moveto
.92857 .61803 lineto
stroke
grestore
[(Fig. 1b)] .5 .61803 0 -4 Mshowa
gsave
0.002 setlinewidth
0 .61803 moveto
1 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0.09968 moveto
1 0.09968 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .19937 moveto
1 .19937 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .29905 moveto
1 .29905 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .39873 moveto
1 .39873 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .49841 moveto
1 .49841 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .5981 moveto
1 .5981 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.01994 moveto
1 0.01994 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.03987 moveto
1 0.03987 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.05981 moveto
1 0.05981 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.07975 moveto
1 0.07975 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .11962 moveto
1 .11962 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .13956 moveto
1 .13956 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .15949 moveto
1 .15949 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .17943 moveto
1 .17943 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .2193 moveto
1 .2193 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .23924 moveto
1 .23924 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .25918 moveto
1 .25918 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .27911 moveto
1 .27911 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .31899 moveto
1 .31899 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .33892 moveto
1 .33892 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .35886 moveto
1 .35886 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .3788 moveto
1 .3788 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .41867 moveto
1 .41867 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .4386 moveto
1 .4386 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .45854 moveto
1 .45854 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .47848 moveto
1 .47848 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .51835 moveto
1 .51835 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .53829 moveto
1 .53829 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .55822 moveto
1 .55822 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .57816 moveto
1 .57816 lineto
stroke
grestore
gsave
0.002 setlinewidth
1 0 moveto
1 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
.5 0 moveto
.5 .61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 .61803 lineto
0 .61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 .17197 moveto
0.06349 .20037 lineto
.10317 .22883 lineto
.14286 .25733 lineto
.18254 .28589 lineto
.22222 .31453 lineto
.2619 .34325 lineto
.30159 .37208 lineto
.34127 .40104 lineto
.38095 .43019 lineto
.42063 .45957 lineto
.46032 .48933 lineto
.5 .51968 lineto
.53968 .55123 lineto
.55952 .56792 lineto
.57937 .58526 lineto
.58433 .58915 lineto
.58681 .5908 lineto
.58929 .59217 lineto
.59177 .59327 lineto
.59425 .59412 lineto
.59673 .59478 lineto
.59921 .5953 lineto
.60169 .59572 lineto
.60417 .59605 lineto
.60913 .59656 lineto
.61409 .59692 lineto
.61905 .59718 lineto
.62401 .59738 lineto
.62897 .59753 lineto
.63393 .59764 lineto
.63889 .59774 lineto
.64385 .59781 lineto
.64881 .59786 lineto
.65377 .59791 lineto
.65873 .59795 lineto
.66865 .598 lineto
.67361 .59802 lineto
.67857 .59803 lineto
.68353 .59804 lineto
.68849 .59805 lineto
.69345 .59806 lineto
.69841 .59807 lineto
.70833 .59808 lineto
.71329 .59808 lineto
.71825 .59809 lineto
.72321 .59809 lineto
.72817 .59809 lineto
.73313 .59809 lineto
.7381 .59809 lineto
Mistroke
.74306 .59809 lineto
.74802 .59809 lineto
.75794 .5981 lineto
.7629 .5981 lineto
.76786 .5981 lineto
.77282 .5981 lineto
.77778 .5981 lineto
.7877 .5981 lineto
.79266 .5981 lineto
.79762 .5981 lineto
.80258 .5981 lineto
.80754 .5981 lineto
.8125 .5981 lineto
.81746 .5981 lineto
.82242 .5981 lineto
.82738 .5981 lineto
.8373 .5981 lineto
.84226 .5981 lineto
.84722 .5981 lineto
.85218 .5981 lineto
.85714 .5981 lineto
.86706 .5981 lineto
.87202 .5981 lineto
.87698 .5981 lineto
.88194 .5981 lineto
.8869 .5981 lineto
.89683 .5981 lineto
.90179 .5981 lineto
.90675 .5981 lineto
.91171 .5981 lineto
.91667 .5981 lineto
.92659 .5981 lineto
.93155 .5981 lineto
.93651 .5981 lineto
.94147 .5981 lineto
.94643 .5981 lineto
.95635 .5981 lineto
.96131 .5981 lineto
.96627 .5981 lineto
.97619 .5981 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.00664 moveto
0.06349 0.04624 lineto
.10317 0.08589 lineto
.14286 .12559 lineto
.18254 .16536 lineto
.22222 .2052 lineto
.2619 .24513 lineto
.30159 .28516 lineto
.34127 .32534 lineto
.38095 .3657 lineto
.42063 .4063 lineto
.46032 .44728 lineto
.5 .48884 lineto
.53968 .53156 lineto
.57937 .57776 lineto
.58433 .58423 lineto
.58929 .591 lineto
.59177 .59446 lineto
.59301 .59607 lineto
.59425 .59708 lineto
.59549 .59741 lineto
.59673 .59756 lineto
.59797 .59765 lineto
.59921 .59771 lineto
.60169 .59779 lineto
.60293 .59782 lineto
.60417 .59785 lineto
.60665 .59789 lineto
.60913 .59792 lineto
.61161 .59795 lineto
.61409 .59797 lineto
.61905 .598 lineto
.62401 .59802 lineto
.62897 .59804 lineto
.63393 .59805 lineto
.63889 .59806 lineto
.64385 .59807 lineto
.64881 .59807 lineto
.65377 .59808 lineto
.65873 .59808 lineto
.66865 .59809 lineto
.67361 .59809 lineto
.67857 .59809 lineto
.68353 .59809 lineto
.68849 .59809 lineto
.69345 .59809 lineto
.69841 .59809 lineto
.70833 .5981 lineto
.71329 .5981 lineto
.71825 .5981 lineto
Mistroke
.72321 .5981 lineto
.72817 .5981 lineto
.73313 .5981 lineto
.7381 .5981 lineto
.74306 .5981 lineto
.74802 .5981 lineto
.75794 .5981 lineto
.7629 .5981 lineto
.76786 .5981 lineto
.77282 .5981 lineto
.77778 .5981 lineto
.7877 .5981 lineto
.79266 .5981 lineto
.79762 .5981 lineto
.80258 .5981 lineto
.80754 .5981 lineto
.8125 .5981 lineto
.81746 .5981 lineto
.82242 .5981 lineto
.82738 .5981 lineto
.8373 .5981 lineto
.84226 .5981 lineto
.84722 .5981 lineto
.85218 .5981 lineto
.85714 .5981 lineto
.86706 .5981 lineto
.87202 .5981 lineto
.87698 .5981 lineto
.88194 .5981 lineto
.8869 .5981 lineto
.89683 .5981 lineto
.90179 .5981 lineto
.90675 .5981 lineto
.91171 .5981 lineto
.91667 .5981 lineto
.92659 .5981 lineto
.93155 .5981 lineto
.93651 .5981 lineto
.94147 .5981 lineto
.94643 .5981 lineto
.95635 .5981 lineto
.96131 .5981 lineto
.96627 .5981 lineto
.97619 .5981 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 .28429 moveto
0.06349 .30501 lineto
.10317 .32577 lineto
.14286 .34657 lineto
.18254 .36742 lineto
.22222 .38833 lineto
.2619 .40931 lineto
.30159 .43038 lineto
.34127 .45155 lineto
.38095 .47285 lineto
.42063 .49433 lineto
.46032 .51605 lineto
.5 .53813 lineto
.53968 .56063 lineto
.57937 .58214 lineto
.58929 .58646 lineto
.59921 .58994 lineto
.60913 .59253 lineto
.61409 .59353 lineto
.61905 .59437 lineto
.62401 .59505 lineto
.62897 .59562 lineto
.63889 .59645 lineto
.64385 .59676 lineto
.64881 .59701 lineto
.65377 .59722 lineto
.65873 .59738 lineto
.66865 .59762 lineto
.67361 .59771 lineto
.67857 .59779 lineto
.68353 .59784 lineto
.68849 .59789 lineto
.69345 .59793 lineto
.69841 .59796 lineto
.70833 .59801 lineto
.71329 .59802 lineto
.71825 .59804 lineto
.72321 .59805 lineto
.72817 .59806 lineto
.73313 .59807 lineto
.7381 .59807 lineto
.74306 .59808 lineto
.74802 .59808 lineto
.75794 .59809 lineto
.7629 .59809 lineto
.76786 .59809 lineto
.77282 .59809 lineto
.77778 .59809 lineto
.7877 .59809 lineto
.79266 .59809 lineto
Mistroke
.79762 .5981 lineto
.80258 .5981 lineto
.80754 .5981 lineto
.8125 .5981 lineto
.81746 .5981 lineto
.82242 .5981 lineto
.82738 .5981 lineto
.8373 .5981 lineto
.84226 .5981 lineto
.84722 .5981 lineto
.85218 .5981 lineto
.85714 .5981 lineto
.86706 .5981 lineto
.87202 .5981 lineto
.87698 .5981 lineto
.88194 .5981 lineto
.8869 .5981 lineto
.89683 .5981 lineto
.90179 .5981 lineto
.90675 .5981 lineto
.91171 .5981 lineto
.91667 .5981 lineto
.92659 .5981 lineto
.93155 .5981 lineto
.93651 .5981 lineto
.94147 .5981 lineto
.94643 .5981 lineto
.95635 .5981 lineto
.96131 .5981 lineto
.96627 .5981 lineto
.97619 .5981 lineto
Mfstroke
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage

%fig1c

%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Mar 17 13:27:44 PST 1992
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{
1 index
Mget
exch
}
forall
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: .61803
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0119048 1.8541 .618034 [
[(0)] 0.02381 0 0 2 0 Minner Mrotsboxa
[(20)] .2619 0 0 2 0 Minner Mrotsboxa
[(40)] .5 0 0 2 0 Minner Mrotsboxa
[(60)] .7381 0 0 2 0 Minner Mrotsboxa
[(80)] .97619 0 0 2 0 Minner Mrotsboxa
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-3)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-2.8)] -0.0125 .12361 1 0 0 Minner Mrotsboxa
[(-2.6)] -0.0125 .24721 1 0 0 Minner Mrotsboxa
[(-2.4)] -0.0125 .37082 1 0 0 Minner Mrotsboxa
[(-2.2)] -0.0125 .49443 1 0 0 Minner Mrotsboxa
[(-2)] -0.0125 .61803 1 0 0 Minner Mrotsboxa
[(phi)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(Fig. 1c)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.00625 lineto
stroke
grestore
[(0)] 0.02381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.2619 0 moveto
.2619 0.00625 lineto
stroke
grestore
[(20)] .2619 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.5 0 moveto
.5 0.00625 lineto
stroke
grestore
[(40)] .5 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.7381 0 moveto
.7381 0.00625 lineto
stroke
grestore
[(60)] .7381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.97619 0 moveto
.97619 0.00625 lineto
stroke
grestore
[(80)] .97619 0 0 2 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0.07143 0 moveto
0.07143 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.11905 0 moveto
.11905 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.16667 0 moveto
.16667 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 0 moveto
.21429 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.30952 0 moveto
.30952 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35714 0 moveto
.35714 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 0 moveto
.40476 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45238 0 moveto
.45238 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54762 0 moveto
.54762 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 0 moveto
.59524 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64286 0 moveto
.64286 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69048 0 moveto
.69048 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 0 moveto
.78571 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83333 0 moveto
.83333 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.88095 0 moveto
.88095 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92857 0 moveto
.92857 0.00375 lineto
stroke
grestore
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0 moveto
0.00625 0 lineto
stroke
grestore
[(-3)] -0.0125 0 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .12361 moveto
0.00625 .12361 lineto
stroke
grestore
[(-2.8)] -0.0125 .12361 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .24721 moveto
0.00625 .24721 lineto
stroke
grestore
[(-2.6)] -0.0125 .24721 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .37082 moveto
0.00625 .37082 lineto
stroke
grestore
[(-2.4)] -0.0125 .37082 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .49443 moveto
0.00625 .49443 lineto
stroke
grestore
[(-2.2)] -0.0125 .49443 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .61803 moveto
0.00625 .61803 lineto
stroke
grestore
[(-2)] -0.0125 .61803 1 0 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0 0.02472 moveto
0.00375 0.02472 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.04944 moveto
0.00375 0.04944 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.07416 moveto
0.00375 0.07416 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.09889 moveto
0.00375 0.09889 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .14833 moveto
0.00375 .14833 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .17305 moveto
0.00375 .17305 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .19777 moveto
0.00375 .19777 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .22249 moveto
0.00375 .22249 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .27193 moveto
0.00375 .27193 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .29666 moveto
0.00375 .29666 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .32138 moveto
0.00375 .32138 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .3461 moveto
0.00375 .3461 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .39554 moveto
0.00375 .39554 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .42026 moveto
0.00375 .42026 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .44498 moveto
0.00375 .44498 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .46971 moveto
0.00375 .46971 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .51915 moveto
0.00375 .51915 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .54387 moveto
0.00375 .54387 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .56859 moveto
0.00375 .56859 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .59331 moveto
0.00375 .59331 lineto
stroke
grestore
[(phi)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
0 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
0.02381 .61178 moveto
0.02381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.2619 .61178 moveto
.2619 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.5 .61178 moveto
.5 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.7381 .61178 moveto
.7381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.97619 .61178 moveto
.97619 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07143 .61428 moveto
0.07143 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.11905 .61428 moveto
.11905 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.16667 .61428 moveto
.16667 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 .61428 moveto
.21429 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.30952 .61428 moveto
.30952 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35714 .61428 moveto
.35714 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 .61428 moveto
.40476 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45238 .61428 moveto
.45238 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54762 .61428 moveto
.54762 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 .61428 moveto
.59524 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64286 .61428 moveto
.64286 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69048 .61428 moveto
.69048 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 .61428 moveto
.78571 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83333 .61428 moveto
.83333 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.88095 .61428 moveto
.88095 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92857 .61428 moveto
.92857 .61803 lineto
stroke
grestore
[(Fig. 1c)] .5 .61803 0 -4 Mshowa
gsave
0.002 setlinewidth
0 .61803 moveto
1 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .12361 moveto
1 .12361 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .24721 moveto
1 .24721 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .37082 moveto
1 .37082 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .49443 moveto
1 .49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.02472 moveto
1 0.02472 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.04944 moveto
1 0.04944 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.07416 moveto
1 0.07416 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.09889 moveto
1 0.09889 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .14833 moveto
1 .14833 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .17305 moveto
1 .17305 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .19777 moveto
1 .19777 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .22249 moveto
1 .22249 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .27193 moveto
1 .27193 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .29666 moveto
1 .29666 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .32138 moveto
1 .32138 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .3461 moveto
1 .3461 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .39554 moveto
1 .39554 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .42026 moveto
1 .42026 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .44498 moveto
1 .44498 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .46971 moveto
1 .46971 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .51915 moveto
1 .51915 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .54387 moveto
1 .54387 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .56859 moveto
1 .56859 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .59331 moveto
1 .59331 lineto
stroke
grestore
gsave
0.002 setlinewidth
1 0 moveto
1 .61803 lineto
stroke
grestore
grestore
gsave
grestore
0 0 moveto
1 0 lineto
1 .61803 lineto
0 .61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
stroke
0.02477 0 moveto
0.02505 0.08521 lineto
stroke
0.02505 0.08521 moveto
0.02629 .11184 lineto
0.02753 .12871 lineto
0.02877 .14133 lineto
0.03125 .16018 lineto
0.03373 .17441 lineto
0.03869 .19584 lineto
0.04365 .21217 lineto
0.05357 .23707 lineto
0.06349 .25633 lineto
0.08333 .28622 lineto
.10317 .30984 lineto
.14286 .34755 lineto
.18254 .37839 lineto
.22222 .40539 lineto
.2619 .42994 lineto
.30159 .45283 lineto
.34127 .47453 lineto
.38095 .49536 lineto
.42063 .51551 lineto
.46032 .53514 lineto
.5 .55431 lineto
.53968 .57302 lineto
.57937 .59113 lineto
.59921 .59976 lineto
.60913 .60385 lineto
.61905 .60768 lineto
.62401 .60943 lineto
.62897 .61101 lineto
.63145 .61171 lineto
.63393 .61232 lineto
.63641 .61284 lineto
.63765 .61306 lineto
.63889 .61325 lineto
.64013 .6134 lineto
.64137 .61352 lineto
.64261 .61359 lineto
.64385 .61363 lineto
.64509 .61363 lineto
.64633 .61358 lineto
.64757 .6135 lineto
.64881 .61338 lineto
.65129 .61304 lineto
.65377 .61257 lineto
.65873 .61135 lineto
.67857 .60457 lineto
.69841 .59677 lineto
.7381 .58076 lineto
.77778 .56507 lineto
.81746 .54995 lineto
Mistroke
.85714 .53543 lineto
.89683 .52151 lineto
.93651 .50815 lineto
.97619 .49532 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
stroke
0.02449 0 moveto
0.02505 .16309 lineto
stroke
0.02505 .16309 moveto
0.02629 .18909 lineto
0.02753 .20557 lineto
0.02877 .21792 lineto
0.03125 .23638 lineto
0.03373 .25034 lineto
0.03869 .2714 lineto
0.04365 .28748 lineto
0.05357 .31208 lineto
0.06349 .33114 lineto
0.08333 .36078 lineto
.10317 .38421 lineto
.14286 .42141 lineto
.18254 .45136 lineto
.22222 .47688 lineto
.2619 .49914 lineto
.30159 .51866 lineto
.34127 .53551 lineto
.38095 .54947 lineto
.40079 .55523 lineto
.42063 .56005 lineto
.44048 .56386 lineto
.4504 .56536 lineto
.46032 .56658 lineto
.46528 .56709 lineto
.47024 .56752 lineto
.4752 .56788 lineto
.48016 .56817 lineto
.48264 .56828 lineto
.48512 .56838 lineto
.4876 .56846 lineto
.49008 .56853 lineto
.49132 .56855 lineto
.49256 .56857 lineto
.4938 .56859 lineto
.49504 .5686 lineto
.49628 .56861 lineto
.49752 .56861 lineto
.49876 .56861 lineto
.5 .5686 lineto
.50124 .56859 lineto
.50248 .56858 lineto
.50496 .56854 lineto
.50744 .56848 lineto
.50992 .5684 lineto
.51488 .5682 lineto
.51984 .56794 lineto
.52976 .56722 lineto
.53968 .56627 lineto
.55952 .56372 lineto
Mistroke
.57937 .56043 lineto
.61905 .55217 lineto
.65873 .54239 lineto
.69841 .53175 lineto
.7381 .52067 lineto
.77778 .50943 lineto
.81746 .4982 lineto
.85714 .48707 lineto
.89683 .47612 lineto
.93651 .46538 lineto
.97619 .45487 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
stroke
0.02425 0 moveto
0.02505 .20949 lineto
stroke
0.02505 .20949 moveto
0.02629 .23115 lineto
0.02753 .2447 lineto
0.02877 .25475 lineto
0.03125 .26959 lineto
0.03373 .28065 lineto
0.03869 .29701 lineto
0.04365 .30921 lineto
0.05357 .32725 lineto
0.06349 .34061 lineto
0.08333 .36005 lineto
.10317 .37401 lineto
.12302 .38466 lineto
.14286 .39301 lineto
.1627 .39965 lineto
.18254 .40493 lineto
.20238 .4091 lineto
.22222 .41234 lineto
.24206 .41479 lineto
.25198 .41574 lineto
.2619 .41654 lineto
.27183 .41718 lineto
.28175 .41769 lineto
.28671 .41789 lineto
.29167 .41806 lineto
.29663 .41819 lineto
.30159 .4183 lineto
.30407 .41835 lineto
.30655 .41838 lineto
.30903 .41841 lineto
.31027 .41842 lineto
.31151 .41843 lineto
.31275 .41844 lineto
.31399 .41845 lineto
.31523 .41845 lineto
.31647 .41845 lineto
.31771 .41846 lineto
.31895 .41846 lineto
.32019 .41845 lineto
.32143 .41845 lineto
.32267 .41845 lineto
.32391 .41844 lineto
.32639 .41842 lineto
.32887 .4184 lineto
.33135 .41837 lineto
.33631 .41829 lineto
.34127 .41818 lineto
.35119 .41791 lineto
.36111 .41755 lineto
.38095 .41658 lineto
Mistroke
.40079 .41533 lineto
.42063 .41381 lineto
.46032 .41012 lineto
.5 .4057 lineto
.53968 .4007 lineto
.57937 .39527 lineto
.61905 .38951 lineto
.65873 .38348 lineto
.69841 .37728 lineto
.7381 .37094 lineto
.77778 .36451 lineto
.81746 .35804 lineto
.85714 .35154 lineto
.89683 .34504 lineto
.93651 .33855 lineto
.97619 .33211 lineto
Mfstroke
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage

%fig1d

%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Mar 17 13:27:57 PST 1992
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{
1 index
Mget
exch
}
forall
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: .61803
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0119048 .927051 .154508 [
[(0)] 0.02381 0 0 2 0 Minner Mrotsboxa
[(20)] .2619 0 0 2 0 Minner Mrotsboxa
[(40)] .5 0 0 2 0 Minner Mrotsboxa
[(60)] .7381 0 0 2 0 Minner Mrotsboxa
[(80)] .97619 0 0 2 0 Minner Mrotsboxa
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-6)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(-5.5)] -0.0125 0.07725 1 0 0 Minner Mrotsboxa
[(-5)] -0.0125 .15451 1 0 0 Minner Mrotsboxa
[(-4.5)] -0.0125 .23176 1 0 0 Minner Mrotsboxa
[(-4)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(-3.5)] -0.0125 .38627 1 0 0 Minner Mrotsboxa
[(-3)] -0.0125 .46353 1 0 0 Minner Mrotsboxa
[(-2.5)] -0.0125 .54078 1 0 0 Minner Mrotsboxa
[(-2)] -0.0125 .61803 1 0 0 Minner Mrotsboxa
[(rho)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(Fig. 1d)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.00625 lineto
stroke
grestore
[(0)] 0.02381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.2619 0 moveto
.2619 0.00625 lineto
stroke
grestore
[(20)] .2619 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.5 0 moveto
.5 0.00625 lineto
stroke
grestore
[(40)] .5 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.7381 0 moveto
.7381 0.00625 lineto
stroke
grestore
[(60)] .7381 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.97619 0 moveto
.97619 0.00625 lineto
stroke
grestore
[(80)] .97619 0 0 2 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0.07143 0 moveto
0.07143 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.11905 0 moveto
.11905 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.16667 0 moveto
.16667 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 0 moveto
.21429 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.30952 0 moveto
.30952 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35714 0 moveto
.35714 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 0 moveto
.40476 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45238 0 moveto
.45238 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54762 0 moveto
.54762 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 0 moveto
.59524 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64286 0 moveto
.64286 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69048 0 moveto
.69048 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 0 moveto
.78571 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83333 0 moveto
.83333 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.88095 0 moveto
.88095 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92857 0 moveto
.92857 0.00375 lineto
stroke
grestore
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0 moveto
0.00625 0 lineto
stroke
grestore
[(-6)] -0.0125 0 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 0.07725 moveto
0.00625 0.07725 lineto
stroke
grestore
[(-5.5)] -0.0125 0.07725 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .15451 moveto
0.00625 .15451 lineto
stroke
grestore
[(-5)] -0.0125 .15451 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .23176 moveto
0.00625 .23176 lineto
stroke
grestore
[(-4.5)] -0.0125 .23176 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .30902 moveto
0.00625 .30902 lineto
stroke
grestore
[(-4)] -0.0125 .30902 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .38627 moveto
0.00625 .38627 lineto
stroke
grestore
[(-3.5)] -0.0125 .38627 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .46353 moveto
0.00625 .46353 lineto
stroke
grestore
[(-3)] -0.0125 .46353 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .54078 moveto
0.00625 .54078 lineto
stroke
grestore
[(-2.5)] -0.0125 .54078 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .61803 moveto
0.00625 .61803 lineto
stroke
grestore
[(-2)] -0.0125 .61803 1 0 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0 0.01545 moveto
0.00375 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.0309 moveto
0.00375 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.04635 moveto
0.00375 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.0618 moveto
0.00375 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.09271 moveto
0.00375 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .10816 moveto
0.00375 .10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .12361 moveto
0.00375 .12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .13906 moveto
0.00375 .13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .16996 moveto
0.00375 .16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .18541 moveto
0.00375 .18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .20086 moveto
0.00375 .20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .21631 moveto
0.00375 .21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .24721 moveto
0.00375 .24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .26266 moveto
0.00375 .26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .27812 moveto
0.00375 .27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .29357 moveto
0.00375 .29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .32447 moveto
0.00375 .32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .33992 moveto
0.00375 .33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .35537 moveto
0.00375 .35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .37082 moveto
0.00375 .37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .40172 moveto
0.00375 .40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .41717 moveto
0.00375 .41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .43262 moveto
0.00375 .43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .44807 moveto
0.00375 .44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .47898 moveto
0.00375 .47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .49443 moveto
0.00375 .49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .50988 moveto
0.00375 .50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .52533 moveto
0.00375 .52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .55623 moveto
0.00375 .55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .57168 moveto
0.00375 .57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .58713 moveto
0.00375 .58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .60258 moveto
0.00375 .60258 lineto
stroke
grestore
[(rho)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
0 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
0.02381 .61178 moveto
0.02381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.2619 .61178 moveto
.2619 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.5 .61178 moveto
.5 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.7381 .61178 moveto
.7381 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.97619 .61178 moveto
.97619 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07143 .61428 moveto
0.07143 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.11905 .61428 moveto
.11905 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.16667 .61428 moveto
.16667 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.21429 .61428 moveto
.21429 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.30952 .61428 moveto
.30952 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.35714 .61428 moveto
.35714 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.40476 .61428 moveto
.40476 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.45238 .61428 moveto
.45238 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.54762 .61428 moveto
.54762 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59524 .61428 moveto
.59524 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.64286 .61428 moveto
.64286 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69048 .61428 moveto
.69048 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.78571 .61428 moveto
.78571 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83333 .61428 moveto
.83333 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.88095 .61428 moveto
.88095 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.92857 .61428 moveto
.92857 .61803 lineto
stroke
grestore
[(Fig. 1d)] .5 .61803 0 -4 Mshowa
gsave
0.002 setlinewidth
0 .61803 moveto
1 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0.07725 moveto
1 0.07725 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .15451 moveto
1 .15451 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .23176 moveto
1 .23176 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .30902 moveto
1 .30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .38627 moveto
1 .38627 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .46353 moveto
1 .46353 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .54078 moveto
1 .54078 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.01545 moveto
1 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.0309 moveto
1 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.04635 moveto
1 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.0618 moveto
1 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.09271 moveto
1 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .10816 moveto
1 .10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .12361 moveto
1 .12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .13906 moveto
1 .13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .16996 moveto
1 .16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .18541 moveto
1 .18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .20086 moveto
1 .20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .21631 moveto
1 .21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .24721 moveto
1 .24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .26266 moveto
1 .26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .27812 moveto
1 .27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .29357 moveto
1 .29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .32447 moveto
1 .32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .33992 moveto
1 .33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .35537 moveto
1 .35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .37082 moveto
1 .37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .40172 moveto
1 .40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .41717 moveto
1 .41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .43262 moveto
1 .43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .44807 moveto
1 .44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .47898 moveto
1 .47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .49443 moveto
1 .49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .50988 moveto
1 .50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .52533 moveto
1 .52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .55623 moveto
1 .55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .57168 moveto
1 .57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .58713 moveto
1 .58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .60258 moveto
1 .60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
1 0 moveto
1 .61803 lineto
stroke
grestore
grestore
gsave
grestore
0 0 moveto
1 0 lineto
1 .61803 lineto
0 .61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
stroke
stroke
stroke
0.03135 0 moveto
0.03373 0.03383 lineto
stroke
0.03373 0.03383 moveto
0.03869 0.08382 lineto
0.04365 .11961 lineto
0.05357 .1706 lineto
0.06349 .20724 lineto
0.08333 .2597 lineto
.10317 .29765 lineto
.14286 .35249 lineto
.18254 .39269 lineto
.22222 .42487 lineto
.2619 .45199 lineto
.30159 .47565 lineto
.34127 .49681 lineto
.38095 .51609 lineto
.42063 .5339 lineto
.46032 .55057 lineto
.5 .56628 lineto
.53968 .5812 lineto
.57937 .59535 lineto
.59921 .60207 lineto
.61905 .60837 lineto
.62897 .61118 lineto
.63393 .61241 lineto
.63889 .61344 lineto
.64137 .61386 lineto
.64385 .6142 lineto
.64509 .61435 lineto
.64633 .61447 lineto
.64757 .61457 lineto
.64881 .61465 lineto
.65005 .61471 lineto
.65129 .61476 lineto
.65253 .6148 lineto
.65377 .61481 lineto
.65501 .61482 lineto
.65625 .61481 lineto
.65749 .6148 lineto
.65873 .61477 lineto
.66121 .6147 lineto
.66369 .6146 lineto
.66865 .61433 lineto
.67857 .61363 lineto
.69841 .61194 lineto
.7381 .6082 lineto
.77778 .60441 lineto
.81746 .60071 lineto
.85714 .59714 lineto
.89683 .5937 lineto
.93651 .59039 lineto
.97619 .58721 lineto
Mistroke
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
stroke
0.02493 0 moveto
0.02505 .12379 lineto
stroke
0.02505 .12379 moveto
0.02629 .17209 lineto
0.02753 .20071 lineto
0.02877 .2212 lineto
0.03125 .25039 lineto
0.03373 .27134 lineto
0.03869 .3013 lineto
0.04365 .32289 lineto
0.05357 .3539 lineto
0.06349 .3764 lineto
0.08333 .40897 lineto
.10317 .43285 lineto
.14286 .46787 lineto
.18254 .49393 lineto
.22222 .51494 lineto
.2619 .53263 lineto
.30159 .54784 lineto
.34127 .561 lineto
.38095 .57224 lineto
.42063 .58149 lineto
.44048 .58531 lineto
.46032 .58856 lineto
.48016 .59123 lineto
.5 .59331 lineto
.50992 .59414 lineto
.51984 .59484 lineto
.52976 .5954 lineto
.53968 .59585 lineto
.54464 .59604 lineto
.5496 .59619 lineto
.55456 .59632 lineto
.55952 .59642 lineto
.56448 .59651 lineto
.56696 .59654 lineto
.56944 .59656 lineto
.57192 .59658 lineto
.57316 .59659 lineto
.5744 .5966 lineto
.57564 .59661 lineto
.57688 .59661 lineto
.57813 .59661 lineto
.57937 .59662 lineto
.58061 .59662 lineto
.58185 .59662 lineto
.58309 .59661 lineto
.58433 .59661 lineto
.58557 .59661 lineto
.58681 .5966 lineto
.58929 .59659 lineto
.59177 .59657 lineto
Mistroke
.59425 .59655 lineto
.59921 .59649 lineto
.60913 .59633 lineto
.61905 .59611 lineto
.63889 .59553 lineto
.65873 .59479 lineto
.69841 .59294 lineto
.7381 .59078 lineto
.77778 .58844 lineto
.81746 .58599 lineto
.85714 .5835 lineto
.89683 .581 lineto
.93651 .57851 lineto
.97619 .57604 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
stroke
0.02408 0 moveto
0.02505 .38742 lineto
stroke
0.02505 .38742 moveto
0.02629 .40699 lineto
0.02753 .4187 lineto
0.02877 .42714 lineto
0.03125 .43923 lineto
0.03373 .44796 lineto
0.03869 .46051 lineto
0.04365 .46959 lineto
0.05357 .48265 lineto
0.06349 .49208 lineto
0.08333 .50558 lineto
.10317 .5152 lineto
.12302 .52261 lineto
.14286 .52855 lineto
.18254 .5375 lineto
.22222 .54383 lineto
.2619 .54838 lineto
.28175 .55014 lineto
.30159 .55162 lineto
.32143 .55286 lineto
.34127 .55387 lineto
.36111 .5547 lineto
.38095 .55535 lineto
.40079 .55585 lineto
.41071 .55605 lineto
.42063 .55622 lineto
.43056 .55636 lineto
.44048 .55647 lineto
.44544 .55651 lineto
.4504 .55655 lineto
.45536 .55658 lineto
.46032 .55661 lineto
.4628 .55662 lineto
.46528 .55663 lineto
.46776 .55663 lineto
.47024 .55664 lineto
.47148 .55664 lineto
.47272 .55664 lineto
.47396 .55665 lineto
.4752 .55665 lineto
.47644 .55665 lineto
.47768 .55665 lineto
.47892 .55665 lineto
.48016 .55665 lineto
.4814 .55665 lineto
.48264 .55665 lineto
.48388 .55665 lineto
.48512 .55665 lineto
.4876 .55664 lineto
.49008 .55664 lineto
Mistroke
.49504 .55663 lineto
.5 .55661 lineto
.50992 .55656 lineto
.51984 .55649 lineto
.53968 .5563 lineto
.55952 .55605 lineto
.57937 .55574 lineto
.61905 .55499 lineto
.65873 .55408 lineto
.69841 .55305 lineto
.7381 .55192 lineto
.77778 .55071 lineto
.81746 .54944 lineto
.85714 .54813 lineto
.89683 .54678 lineto
.93651 .5454 lineto
.97619 .54401 lineto
Mfstroke
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage

%fig2a

%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Mar 17 13:28:14 PST 1992
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{
1 index
Mget
exch
}
forall
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: .61803
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
.105442 0.0870748 .927051 .176581 [
[(0)] .10544 0 0 2 0 Minner Mrotsboxa
[(2)] .27959 0 0 2 0 Minner Mrotsboxa
[(4)] .45374 0 0 2 0 Minner Mrotsboxa
[(6)] .62789 0 0 2 0 Minner Mrotsboxa
[(8)] .80204 0 0 2 0 Minner Mrotsboxa
[(10)] .97619 0 0 2 0 Minner Mrotsboxa
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-5)] -0.0125 0.04415 1 0 0 Minner Mrotsboxa
[(-4.5)] -0.0125 .13244 1 0 0 Minner Mrotsboxa
[(-4)] -0.0125 .22073 1 0 0 Minner Mrotsboxa
[(-3.5)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(-3)] -0.0125 .39731 1 0 0 Minner Mrotsboxa
[(-2.5)] -0.0125 .4856 1 0 0 Minner Mrotsboxa
[(-2)] -0.0125 .57389 1 0 0 Minner Mrotsboxa
[(phi)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(Fig. 2a)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
.10544 0 moveto
.10544 0.00625 lineto
stroke
grestore
[(0)] .10544 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.27959 0 moveto
.27959 0.00625 lineto
stroke
grestore
[(2)] .27959 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.45374 0 moveto
.45374 0.00625 lineto
stroke
grestore
[(4)] .45374 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.62789 0 moveto
.62789 0.00625 lineto
stroke
grestore
[(6)] .62789 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.80204 0 moveto
.80204 0.00625 lineto
stroke
grestore
[(8)] .80204 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.97619 0 moveto
.97619 0.00625 lineto
stroke
grestore
[(10)] .97619 0 0 2 0 Minner Mrotshowa
gsave
0.001 setlinewidth
.14027 0 moveto
.14027 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.1751 0 moveto
.1751 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.20993 0 moveto
.20993 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.24476 0 moveto
.24476 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.31442 0 moveto
.31442 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.34925 0 moveto
.34925 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.38408 0 moveto
.38408 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.41891 0 moveto
.41891 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.48857 0 moveto
.48857 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.5234 0 moveto
.5234 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.55823 0 moveto
.55823 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59306 0 moveto
.59306 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.66272 0 moveto
.66272 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69755 0 moveto
.69755 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.73238 0 moveto
.73238 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.76721 0 moveto
.76721 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83687 0 moveto
.83687 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.8717 0 moveto
.8717 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.90653 0 moveto
.90653 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.94136 0 moveto
.94136 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07061 0 moveto
0.07061 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03578 0 moveto
0.03578 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00095 0 moveto
0.00095 0.00375 lineto
stroke
grestore
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.04415 moveto
0.00625 0.04415 lineto
stroke
grestore
[(-5)] -0.0125 0.04415 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .13244 moveto
0.00625 .13244 lineto
stroke
grestore
[(-4.5)] -0.0125 .13244 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .22073 moveto
0.00625 .22073 lineto
stroke
grestore
[(-4)] -0.0125 .22073 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .30902 moveto
0.00625 .30902 lineto
stroke
grestore
[(-3.5)] -0.0125 .30902 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .39731 moveto
0.00625 .39731 lineto
stroke
grestore
[(-3)] -0.0125 .39731 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .4856 moveto
0.00625 .4856 lineto
stroke
grestore
[(-2.5)] -0.0125 .4856 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .57389 moveto
0.00625 .57389 lineto
stroke
grestore
[(-2)] -0.0125 .57389 1 0 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0 0.0618 moveto
0.00375 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.07946 moveto
0.00375 0.07946 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.09712 moveto
0.00375 0.09712 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .11478 moveto
0.00375 .11478 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .15009 moveto
0.00375 .15009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .16775 moveto
0.00375 .16775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .18541 moveto
0.00375 .18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .20307 moveto
0.00375 .20307 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .23838 moveto
0.00375 .23838 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .25604 moveto
0.00375 .25604 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .2737 moveto
0.00375 .2737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .29136 moveto
0.00375 .29136 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .32668 moveto
0.00375 .32668 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .34433 moveto
0.00375 .34433 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .36199 moveto
0.00375 .36199 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .37965 moveto
0.00375 .37965 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .41497 moveto
0.00375 .41497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .43262 moveto
0.00375 .43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .45028 moveto
0.00375 .45028 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .46794 moveto
0.00375 .46794 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .50326 moveto
0.00375 .50326 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .52091 moveto
0.00375 .52091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .53857 moveto
0.00375 .53857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .55623 moveto
0.00375 .55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.02649 moveto
0.00375 0.02649 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.00883 moveto
0.00375 0.00883 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .59155 moveto
0.00375 .59155 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .6092 moveto
0.00375 .6092 lineto
stroke
grestore
[(phi)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
0 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
.10544 .61178 moveto
.10544 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.27959 .61178 moveto
.27959 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.45374 .61178 moveto
.45374 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.62789 .61178 moveto
.62789 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.80204 .61178 moveto
.80204 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.97619 .61178 moveto
.97619 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.14027 .61428 moveto
.14027 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.1751 .61428 moveto
.1751 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.20993 .61428 moveto
.20993 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.24476 .61428 moveto
.24476 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.31442 .61428 moveto
.31442 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.34925 .61428 moveto
.34925 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.38408 .61428 moveto
.38408 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.41891 .61428 moveto
.41891 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.48857 .61428 moveto
.48857 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.5234 .61428 moveto
.5234 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.55823 .61428 moveto
.55823 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59306 .61428 moveto
.59306 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.66272 .61428 moveto
.66272 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69755 .61428 moveto
.69755 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.73238 .61428 moveto
.73238 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.76721 .61428 moveto
.76721 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83687 .61428 moveto
.83687 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.8717 .61428 moveto
.8717 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.90653 .61428 moveto
.90653 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.94136 .61428 moveto
.94136 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07061 .61428 moveto
0.07061 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03578 .61428 moveto
0.03578 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00095 .61428 moveto
0.00095 .61803 lineto
stroke
grestore
[(Fig. 2a)] .5 .61803 0 -4 Mshowa
gsave
0.002 setlinewidth
0 .61803 moveto
1 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0.04415 moveto
1 0.04415 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .13244 moveto
1 .13244 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .22073 moveto
1 .22073 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .30902 moveto
1 .30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .39731 moveto
1 .39731 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .4856 moveto
1 .4856 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .57389 moveto
1 .57389 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.0618 moveto
1 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.07946 moveto
1 0.07946 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.09712 moveto
1 0.09712 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .11478 moveto
1 .11478 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .15009 moveto
1 .15009 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .16775 moveto
1 .16775 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .18541 moveto
1 .18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .20307 moveto
1 .20307 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .23838 moveto
1 .23838 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .25604 moveto
1 .25604 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .2737 moveto
1 .2737 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .29136 moveto
1 .29136 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .32668 moveto
1 .32668 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .34433 moveto
1 .34433 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .36199 moveto
1 .36199 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .37965 moveto
1 .37965 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .41497 moveto
1 .41497 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .43262 moveto
1 .43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .45028 moveto
1 .45028 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .46794 moveto
1 .46794 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .50326 moveto
1 .50326 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .52091 moveto
1 .52091 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .53857 moveto
1 .53857 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .55623 moveto
1 .55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.02649 moveto
1 0.02649 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.00883 moveto
1 0.00883 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .59155 moveto
1 .59155 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .6092 moveto
1 .6092 lineto
stroke
grestore
gsave
0.002 setlinewidth
1 0 moveto
1 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
.10544 0 moveto
.10544 .61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 .61803 lineto
0 .61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
.1068 .21943 moveto
.10816 .21807 lineto
.11088 .21541 lineto
.11633 .21032 lineto
.12721 .20096 lineto
.14898 .18479 lineto
.19252 .15937 lineto
.23605 .13969 lineto
.27959 .12364 lineto
.32313 .11007 lineto
.36667 0.09833 lineto
.4102 0.08797 lineto
.45374 0.07871 lineto
.49728 0.07034 lineto
.54082 0.06269 lineto
.58435 0.05566 lineto
.62789 0.04915 lineto
.67143 0.04309 lineto
.71497 0.03742 lineto
.7585 0.0321 lineto
.80204 0.02708 lineto
.84558 0.02233 lineto
.88912 0.01782 lineto
.93265 0.01354 lineto
.97619 0.00945 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 .55677 moveto
0.02517 .49186 lineto
0.02653 .46105 lineto
0.02789 .43945 lineto
0.02925 .42261 lineto
0.03197 .3969 lineto
0.03469 .37739 lineto
0.04014 .34834 lineto
0.04558 .32679 lineto
0.05102 .3096 lineto
0.0619 .28304 lineto
0.07279 .26276 lineto
0.08367 .24634 lineto
0.09456 .23254 lineto
.1 .22639 lineto
.10272 .22346 lineto
.10408 .22204 lineto
stroke
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage

%fig2b

%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Mar 17 13:28:29 PST 1992
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{
1 index
Mget
exch
}
forall
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: .61803
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
.105442 0.0870748 .232682 .181021 [
[(0)] .10544 0 0 2 0 Minner Mrotsboxa
[(2)] .27959 0 0 2 0 Minner Mrotsboxa
[(4)] .45374 0 0 2 0 Minner Mrotsboxa
[(6)] .62789 0 0 2 0 Minner Mrotsboxa
[(8)] .80204 0 0 2 0 Minner Mrotsboxa
[(10)] .97619 0 0 2 0 Minner Mrotsboxa
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-1)] -0.0125 0.05166 1 0 0 Minner Mrotsboxa
[(-0.5)] -0.0125 .14217 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .23268 1 0 0 Minner Mrotsboxa
[(0.5)] -0.0125 .32319 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .4137 1 0 0 Minner Mrotsboxa
[(1.5)] -0.0125 .50421 1 0 0 Minner Mrotsboxa
[(2)] -0.0125 .59472 1 0 0 Minner Mrotsboxa
[(rho)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(Fig. 2b)] .5 .61803 0 -4 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
.10544 0 moveto
.10544 0.00625 lineto
stroke
grestore
[(0)] .10544 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.27959 0 moveto
.27959 0.00625 lineto
stroke
grestore
[(2)] .27959 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.45374 0 moveto
.45374 0.00625 lineto
stroke
grestore
[(4)] .45374 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.62789 0 moveto
.62789 0.00625 lineto
stroke
grestore
[(6)] .62789 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.80204 0 moveto
.80204 0.00625 lineto
stroke
grestore
[(8)] .80204 0 0 2 0 Minner Mrotshowa
gsave
0.002 setlinewidth
.97619 0 moveto
.97619 0.00625 lineto
stroke
grestore
[(10)] .97619 0 0 2 0 Minner Mrotshowa
gsave
0.001 setlinewidth
.14027 0 moveto
.14027 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.1751 0 moveto
.1751 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.20993 0 moveto
.20993 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.24476 0 moveto
.24476 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.31442 0 moveto
.31442 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.34925 0 moveto
.34925 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.38408 0 moveto
.38408 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.41891 0 moveto
.41891 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.48857 0 moveto
.48857 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.5234 0 moveto
.5234 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.55823 0 moveto
.55823 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59306 0 moveto
.59306 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.66272 0 moveto
.66272 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69755 0 moveto
.69755 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.73238 0 moveto
.73238 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.76721 0 moveto
.76721 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83687 0 moveto
.83687 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.8717 0 moveto
.8717 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.90653 0 moveto
.90653 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
.94136 0 moveto
.94136 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07061 0 moveto
0.07061 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03578 0 moveto
0.03578 0.00375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00095 0 moveto
0.00095 0.00375 lineto
stroke
grestore
[(s)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
1 0 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.05166 moveto
0.00625 0.05166 lineto
stroke
grestore
[(-1)] -0.0125 0.05166 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .14217 moveto
0.00625 .14217 lineto
stroke
grestore
[(-0.5)] -0.0125 .14217 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .23268 moveto
0.00625 .23268 lineto
stroke
grestore
[(0)] -0.0125 .23268 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .32319 moveto
0.00625 .32319 lineto
stroke
grestore
[(0.5)] -0.0125 .32319 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .4137 moveto
0.00625 .4137 lineto
stroke
grestore
[(1)] -0.0125 .4137 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .50421 moveto
0.00625 .50421 lineto
stroke
grestore
[(1.5)] -0.0125 .50421 1 0 0 Minner Mrotshowa
gsave
0.002 setlinewidth
0 .59472 moveto
0.00625 .59472 lineto
stroke
grestore
[(2)] -0.0125 .59472 1 0 0 Minner Mrotshowa
gsave
0.001 setlinewidth
0 0.06976 moveto
0.00375 0.06976 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.08787 moveto
0.00375 0.08787 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .10597 moveto
0.00375 .10597 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .12407 moveto
0.00375 .12407 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .16027 moveto
0.00375 .16027 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .17838 moveto
0.00375 .17838 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .19648 moveto
0.00375 .19648 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .21458 moveto
0.00375 .21458 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .25078 moveto
0.00375 .25078 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .26889 moveto
0.00375 .26889 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .28699 moveto
0.00375 .28699 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .30509 moveto
0.00375 .30509 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .34129 moveto
0.00375 .34129 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .3594 moveto
0.00375 .3594 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .3775 moveto
0.00375 .3775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .3956 moveto
0.00375 .3956 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .43181 moveto
0.00375 .43181 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .44991 moveto
0.00375 .44991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .46801 moveto
0.00375 .46801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .48611 moveto
0.00375 .48611 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .52232 moveto
0.00375 .52232 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .54042 moveto
0.00375 .54042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .55852 moveto
0.00375 .55852 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .57662 moveto
0.00375 .57662 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.03356 moveto
0.00375 0.03356 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.01546 moveto
0.00375 0.01546 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 .61283 moveto
0.00375 .61283 lineto
stroke
grestore
[(rho)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
gsave
0.002 setlinewidth
0 0 moveto
0 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
.10544 .61178 moveto
.10544 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.27959 .61178 moveto
.27959 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.45374 .61178 moveto
.45374 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.62789 .61178 moveto
.62789 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.80204 .61178 moveto
.80204 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.97619 .61178 moveto
.97619 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.14027 .61428 moveto
.14027 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.1751 .61428 moveto
.1751 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.20993 .61428 moveto
.20993 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.24476 .61428 moveto
.24476 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.31442 .61428 moveto
.31442 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.34925 .61428 moveto
.34925 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.38408 .61428 moveto
.38408 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.41891 .61428 moveto
.41891 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.48857 .61428 moveto
.48857 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.5234 .61428 moveto
.5234 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.55823 .61428 moveto
.55823 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.59306 .61428 moveto
.59306 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.66272 .61428 moveto
.66272 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.69755 .61428 moveto
.69755 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.73238 .61428 moveto
.73238 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.76721 .61428 moveto
.76721 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.83687 .61428 moveto
.83687 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.8717 .61428 moveto
.8717 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.90653 .61428 moveto
.90653 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
.94136 .61428 moveto
.94136 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07061 .61428 moveto
0.07061 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03578 .61428 moveto
0.03578 .61803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00095 .61428 moveto
0.00095 .61803 lineto
stroke
grestore
[(Fig. 2b)] .5 .61803 0 -4 Mshowa
gsave
0.002 setlinewidth
0 .61803 moveto
1 .61803 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 0.05166 moveto
1 0.05166 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .14217 moveto
1 .14217 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .23268 moveto
1 .23268 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .32319 moveto
1 .32319 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .4137 moveto
1 .4137 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .50421 moveto
1 .50421 lineto
stroke
grestore
gsave
0.002 setlinewidth
.99375 .59472 moveto
1 .59472 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.06976 moveto
1 0.06976 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.08787 moveto
1 0.08787 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .10597 moveto
1 .10597 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .12407 moveto
1 .12407 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .16027 moveto
1 .16027 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .17838 moveto
1 .17838 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .19648 moveto
1 .19648 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .21458 moveto
1 .21458 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .25078 moveto
1 .25078 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .26889 moveto
1 .26889 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .28699 moveto
1 .28699 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .30509 moveto
1 .30509 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .34129 moveto
1 .34129 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .3594 moveto
1 .3594 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .3775 moveto
1 .3775 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .3956 moveto
1 .3956 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .43181 moveto
1 .43181 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .44991 moveto
1 .44991 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .46801 moveto
1 .46801 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .48611 moveto
1 .48611 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .52232 moveto
1 .52232 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .54042 moveto
1 .54042 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .55852 moveto
1 .55852 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .57662 moveto
1 .57662 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.03356 moveto
1 0.03356 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 0.01546 moveto
1 0.01546 lineto
stroke
grestore
gsave
0.001 setlinewidth
.99625 .61283 moveto
1 .61283 lineto
stroke
grestore
gsave
0.002 setlinewidth
1 0 moveto
1 .61803 lineto
stroke
grestore
grestore
gsave
gsave
0.002 setlinewidth
0 .23268 moveto
1 .23268 lineto
stroke
grestore
gsave
0.002 setlinewidth
.10544 0 moveto
.10544 .61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 .61803 lineto
0 .61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
.1068 .23134 moveto
.10816 .22994 lineto
.11088 .22718 lineto
.11633 .22192 lineto
.12721 .21224 lineto
.14898 .19554 lineto
.19252 .16928 lineto
.23605 .14898 lineto
.27959 .13241 lineto
.32313 .11842 lineto
.36667 .10631 lineto
.4102 0.09564 lineto
.45374 0.08609 lineto
.49728 0.07746 lineto
.54082 0.06958 lineto
.58435 0.06233 lineto
.62789 0.05562 lineto
.67143 0.04938 lineto
.71497 0.04353 lineto
.7585 0.03805 lineto
.80204 0.03287 lineto
.84558 0.02798 lineto
.88912 0.02334 lineto
.93265 0.01892 lineto
.97619 0.01472 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 .60332 moveto
0.02517 .52148 lineto
0.02653 .48656 lineto
0.02789 .46275 lineto
0.02925 .44445 lineto
0.03197 .41685 lineto
0.03469 .39612 lineto
0.04014 .36549 lineto
0.04558 .34289 lineto
0.05102 .32494 lineto
0.0619 .29728 lineto
0.07279 .27623 lineto
0.08367 .25921 lineto
0.09456 .24491 lineto
.1 .23854 lineto
.10272 .23552 lineto
.10408 .23404 lineto
stroke
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage

